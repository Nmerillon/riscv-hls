-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity process_debug_comman is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_uart_AWVALID : OUT STD_LOGIC;
    m_axi_uart_AWREADY : IN STD_LOGIC;
    m_axi_uart_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_uart_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_uart_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_uart_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_uart_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_uart_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_uart_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_uart_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_uart_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_uart_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_uart_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_uart_WVALID : OUT STD_LOGIC;
    m_axi_uart_WREADY : IN STD_LOGIC;
    m_axi_uart_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_uart_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_uart_WLAST : OUT STD_LOGIC;
    m_axi_uart_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_uart_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_uart_ARVALID : OUT STD_LOGIC;
    m_axi_uart_ARREADY : IN STD_LOGIC;
    m_axi_uart_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_uart_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_uart_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_uart_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_uart_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_uart_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_uart_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_uart_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_uart_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_uart_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_uart_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_uart_RVALID : IN STD_LOGIC;
    m_axi_uart_RREADY : OUT STD_LOGIC;
    m_axi_uart_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_uart_RLAST : IN STD_LOGIC;
    m_axi_uart_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_uart_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_uart_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_uart_BVALID : IN STD_LOGIC;
    m_axi_uart_BREADY : OUT STD_LOGIC;
    m_axi_uart_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_uart_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_uart_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    uart_offset : IN STD_LOGIC_VECTOR (29 downto 0);
    ir : OUT STD_LOGIC_VECTOR (31 downto 0);
    ir_ap_vld : OUT STD_LOGIC;
    cmd_count : IN STD_LOGIC_VECTOR (31 downto 0);
    halted_i : IN STD_LOGIC_VECTOR (0 downto 0);
    halted_o : OUT STD_LOGIC_VECTOR (0 downto 0);
    halted_o_ap_vld : OUT STD_LOGIC;
    pc_i : IN STD_LOGIC_VECTOR (31 downto 0);
    pc_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    pc_o_ap_vld : OUT STD_LOGIC );
end;


architecture behav of process_debug_comman is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (32 downto 0) := "000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (32 downto 0) := "000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (32 downto 0) := "000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (32 downto 0) := "000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (32 downto 0) := "000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (32 downto 0) := "000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (32 downto 0) := "000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (32 downto 0) := "000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (32 downto 0) := "000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (32 downto 0) := "001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (32 downto 0) := "010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (32 downto 0) := "100000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_53 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010011";
    constant ap_const_lv32_58 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011000";
    constant ap_const_lv32_52 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010010";
    constant ap_const_lv32_57 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010111";
    constant ap_const_lv32_4D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001101";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_CAFE00 : STD_LOGIC_VECTOR (31 downto 0) := "00000000110010101111111000000000";
    constant ap_const_lv32_55 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010101";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_CAFE : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001100101011111110";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_FEED : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001111111011101101";
    constant ap_const_lv32_F00D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001111000000001101";
    constant ap_const_lv32_1234 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000001001000110100";
    constant ap_const_lv32_FACE : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001111101011001110";
    constant ap_const_lv32_BABE : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001011101010111110";
    constant ap_const_lv32_DEAD : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001101111010101101";
    constant ap_const_lv32_DEADBEEF : STD_LOGIC_VECTOR (31 downto 0) := "11011110101011011011111011101111";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv8_20 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal mem0_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mem0_ce0 : STD_LOGIC;
    signal mem0_we0 : STD_LOGIC;
    signal mem0_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mem0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mem1_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mem1_ce0 : STD_LOGIC;
    signal mem1_we0 : STD_LOGIC;
    signal mem1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mem1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mem2_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mem2_ce0 : STD_LOGIC;
    signal mem2_we0 : STD_LOGIC;
    signal mem2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mem2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mem3_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal mem3_ce0 : STD_LOGIC;
    signal mem3_we0 : STD_LOGIC;
    signal mem3_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mem3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal x_ce0 : STD_LOGIC;
    signal x_we0 : STD_LOGIC;
    signal x_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_ce1 : STD_LOGIC;
    signal x_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal hbkpt_active_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal hbkpt_active_ce0 : STD_LOGIC;
    signal hbkpt_active_we0 : STD_LOGIC;
    signal hbkpt_active_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal hbkpt_active_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal hbkpt_target_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal hbkpt_target_ce0 : STD_LOGIC;
    signal hbkpt_target_we0 : STD_LOGIC;
    signal hbkpt_target_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_397 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal grp_read_u32_fu_338_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_402 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_read_u32_fu_338_ap_ready : STD_LOGIC;
    signal grp_read_u32_fu_338_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal grp_read_u8_fu_346_ap_ready : STD_LOGIC;
    signal grp_read_u8_fu_346_ap_done : STD_LOGIC;
    signal cmd_reg_1148 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state10_on_subcall_done : BOOLEAN;
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal grp_read_byte_fu_371_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_read_byte_fu_371_ap_ready : STD_LOGIC;
    signal grp_read_byte_fu_371_ap_done : STD_LOGIC;
    signal grp_load_fu_379_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal halted_load_4_reg_1155 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal halted_load_3_reg_1159 : STD_LOGIC_VECTOR (0 downto 0);
    signal halted_load_2_reg_1163 : STD_LOGIC_VECTOR (0 downto 0);
    signal halted_load_1_reg_1167 : STD_LOGIC_VECTOR (0 downto 0);
    signal halted_load_reg_1171 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_read_u8_fu_346_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal id_reg_1175 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln304_fu_474_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln304_reg_1180 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal grp_write_u32_fu_327_ap_ready : STD_LOGIC;
    signal grp_write_u32_fu_327_ap_done : STD_LOGIC;
    signal ap_predicate_op96_call_state14 : BOOLEAN;
    signal ap_block_state14_on_subcall_done : BOOLEAN;
    signal p_0_i_fu_477_p258 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_0_i_reg_1185 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal icmp_ln168_fu_995_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln168_reg_1190 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal k_fu_1001_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal k_reg_1194 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln169_fu_1007_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln169_reg_1199 : STD_LOGIC_VECTOR (63 downto 0);
    signal hbkpt_active_addr_reg_1204 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln277_fu_1012_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln277_reg_1212 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal icmp_ln264_fu_1024_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln264_reg_1217 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal x_load_reg_1226 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal trunc_ln249_fu_1039_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln249_reg_1231 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln234_fu_1071_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln234_reg_1235 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal select_ln101_2_fu_1130_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln101_2_reg_1262 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal grp_cpu_step_fu_301_ap_start : STD_LOGIC;
    signal grp_cpu_step_fu_301_ap_done : STD_LOGIC;
    signal grp_cpu_step_fu_301_ap_idle : STD_LOGIC;
    signal grp_cpu_step_fu_301_ap_ready : STD_LOGIC;
    signal grp_cpu_step_fu_301_pc_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cpu_step_fu_301_pc_o_ap_vld : STD_LOGIC;
    signal grp_cpu_step_fu_301_hbkpt_active_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_cpu_step_fu_301_hbkpt_active_ce0 : STD_LOGIC;
    signal grp_cpu_step_fu_301_hbkpt_target_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_cpu_step_fu_301_hbkpt_target_ce0 : STD_LOGIC;
    signal grp_cpu_step_fu_301_mem0_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cpu_step_fu_301_mem0_ce0 : STD_LOGIC;
    signal grp_cpu_step_fu_301_mem0_we0 : STD_LOGIC;
    signal grp_cpu_step_fu_301_mem0_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_cpu_step_fu_301_mem1_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cpu_step_fu_301_mem1_ce0 : STD_LOGIC;
    signal grp_cpu_step_fu_301_mem1_we0 : STD_LOGIC;
    signal grp_cpu_step_fu_301_mem1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_cpu_step_fu_301_mem2_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cpu_step_fu_301_mem2_ce0 : STD_LOGIC;
    signal grp_cpu_step_fu_301_mem2_we0 : STD_LOGIC;
    signal grp_cpu_step_fu_301_mem2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_cpu_step_fu_301_mem3_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cpu_step_fu_301_mem3_ce0 : STD_LOGIC;
    signal grp_cpu_step_fu_301_mem3_we0 : STD_LOGIC;
    signal grp_cpu_step_fu_301_mem3_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_cpu_step_fu_301_x_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_cpu_step_fu_301_x_ce0 : STD_LOGIC;
    signal grp_cpu_step_fu_301_x_we0 : STD_LOGIC;
    signal grp_cpu_step_fu_301_x_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cpu_step_fu_301_x_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_cpu_step_fu_301_x_ce1 : STD_LOGIC;
    signal grp_cpu_step_fu_301_halted : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cpu_step_fu_301_halted_ap_vld : STD_LOGIC;
    signal grp_write_u32_fu_327_ap_start : STD_LOGIC;
    signal grp_write_u32_fu_327_ap_idle : STD_LOGIC;
    signal grp_write_u32_fu_327_m_axi_uart_AWVALID : STD_LOGIC;
    signal grp_write_u32_fu_327_m_axi_uart_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_write_u32_fu_327_m_axi_uart_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_write_u32_fu_327_m_axi_uart_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_write_u32_fu_327_m_axi_uart_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_u32_fu_327_m_axi_uart_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_write_u32_fu_327_m_axi_uart_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_write_u32_fu_327_m_axi_uart_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_write_u32_fu_327_m_axi_uart_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_u32_fu_327_m_axi_uart_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_write_u32_fu_327_m_axi_uart_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_write_u32_fu_327_m_axi_uart_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_write_u32_fu_327_m_axi_uart_WVALID : STD_LOGIC;
    signal grp_write_u32_fu_327_m_axi_uart_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_write_u32_fu_327_m_axi_uart_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_write_u32_fu_327_m_axi_uart_WLAST : STD_LOGIC;
    signal grp_write_u32_fu_327_m_axi_uart_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_write_u32_fu_327_m_axi_uart_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_write_u32_fu_327_m_axi_uart_ARVALID : STD_LOGIC;
    signal grp_write_u32_fu_327_m_axi_uart_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_write_u32_fu_327_m_axi_uart_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_write_u32_fu_327_m_axi_uart_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_write_u32_fu_327_m_axi_uart_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_u32_fu_327_m_axi_uart_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_write_u32_fu_327_m_axi_uart_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_write_u32_fu_327_m_axi_uart_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_write_u32_fu_327_m_axi_uart_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_u32_fu_327_m_axi_uart_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_write_u32_fu_327_m_axi_uart_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_write_u32_fu_327_m_axi_uart_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_write_u32_fu_327_m_axi_uart_RREADY : STD_LOGIC;
    signal grp_write_u32_fu_327_m_axi_uart_BREADY : STD_LOGIC;
    signal grp_write_u32_fu_327_value_r : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_read_u32_fu_338_ap_start : STD_LOGIC;
    signal grp_read_u32_fu_338_ap_idle : STD_LOGIC;
    signal grp_read_u32_fu_338_m_axi_uart_AWVALID : STD_LOGIC;
    signal grp_read_u32_fu_338_m_axi_uart_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_read_u32_fu_338_m_axi_uart_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_read_u32_fu_338_m_axi_uart_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_read_u32_fu_338_m_axi_uart_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_read_u32_fu_338_m_axi_uart_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_read_u32_fu_338_m_axi_uart_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_read_u32_fu_338_m_axi_uart_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_read_u32_fu_338_m_axi_uart_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_read_u32_fu_338_m_axi_uart_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_read_u32_fu_338_m_axi_uart_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_read_u32_fu_338_m_axi_uart_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_read_u32_fu_338_m_axi_uart_WVALID : STD_LOGIC;
    signal grp_read_u32_fu_338_m_axi_uart_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_read_u32_fu_338_m_axi_uart_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_read_u32_fu_338_m_axi_uart_WLAST : STD_LOGIC;
    signal grp_read_u32_fu_338_m_axi_uart_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_read_u32_fu_338_m_axi_uart_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_read_u32_fu_338_m_axi_uart_ARVALID : STD_LOGIC;
    signal grp_read_u32_fu_338_m_axi_uart_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_read_u32_fu_338_m_axi_uart_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_read_u32_fu_338_m_axi_uart_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_read_u32_fu_338_m_axi_uart_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_read_u32_fu_338_m_axi_uart_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_read_u32_fu_338_m_axi_uart_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_read_u32_fu_338_m_axi_uart_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_read_u32_fu_338_m_axi_uart_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_read_u32_fu_338_m_axi_uart_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_read_u32_fu_338_m_axi_uart_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_read_u32_fu_338_m_axi_uart_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_read_u32_fu_338_m_axi_uart_RREADY : STD_LOGIC;
    signal grp_read_u32_fu_338_m_axi_uart_BREADY : STD_LOGIC;
    signal grp_read_u8_fu_346_ap_start : STD_LOGIC;
    signal grp_read_u8_fu_346_ap_idle : STD_LOGIC;
    signal grp_read_u8_fu_346_m_axi_uart_AWVALID : STD_LOGIC;
    signal grp_read_u8_fu_346_m_axi_uart_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_read_u8_fu_346_m_axi_uart_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_read_u8_fu_346_m_axi_uart_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_read_u8_fu_346_m_axi_uart_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_read_u8_fu_346_m_axi_uart_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_read_u8_fu_346_m_axi_uart_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_read_u8_fu_346_m_axi_uart_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_read_u8_fu_346_m_axi_uart_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_read_u8_fu_346_m_axi_uart_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_read_u8_fu_346_m_axi_uart_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_read_u8_fu_346_m_axi_uart_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_read_u8_fu_346_m_axi_uart_WVALID : STD_LOGIC;
    signal grp_read_u8_fu_346_m_axi_uart_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_read_u8_fu_346_m_axi_uart_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_read_u8_fu_346_m_axi_uart_WLAST : STD_LOGIC;
    signal grp_read_u8_fu_346_m_axi_uart_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_read_u8_fu_346_m_axi_uart_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_read_u8_fu_346_m_axi_uart_ARVALID : STD_LOGIC;
    signal grp_read_u8_fu_346_m_axi_uart_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_read_u8_fu_346_m_axi_uart_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_read_u8_fu_346_m_axi_uart_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_read_u8_fu_346_m_axi_uart_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_read_u8_fu_346_m_axi_uart_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_read_u8_fu_346_m_axi_uart_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_read_u8_fu_346_m_axi_uart_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_read_u8_fu_346_m_axi_uart_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_read_u8_fu_346_m_axi_uart_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_read_u8_fu_346_m_axi_uart_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_read_u8_fu_346_m_axi_uart_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_read_u8_fu_346_m_axi_uart_RREADY : STD_LOGIC;
    signal grp_read_u8_fu_346_m_axi_uart_BREADY : STD_LOGIC;
    signal grp_write_u8_fu_353_ap_start : STD_LOGIC;
    signal grp_write_u8_fu_353_ap_done : STD_LOGIC;
    signal grp_write_u8_fu_353_ap_idle : STD_LOGIC;
    signal grp_write_u8_fu_353_ap_ready : STD_LOGIC;
    signal grp_write_u8_fu_353_m_axi_uart_AWVALID : STD_LOGIC;
    signal grp_write_u8_fu_353_m_axi_uart_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_write_u8_fu_353_m_axi_uart_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_write_u8_fu_353_m_axi_uart_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_write_u8_fu_353_m_axi_uart_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_u8_fu_353_m_axi_uart_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_write_u8_fu_353_m_axi_uart_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_write_u8_fu_353_m_axi_uart_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_write_u8_fu_353_m_axi_uart_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_u8_fu_353_m_axi_uart_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_write_u8_fu_353_m_axi_uart_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_write_u8_fu_353_m_axi_uart_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_write_u8_fu_353_m_axi_uart_WVALID : STD_LOGIC;
    signal grp_write_u8_fu_353_m_axi_uart_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_write_u8_fu_353_m_axi_uart_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_write_u8_fu_353_m_axi_uart_WLAST : STD_LOGIC;
    signal grp_write_u8_fu_353_m_axi_uart_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_write_u8_fu_353_m_axi_uart_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_write_u8_fu_353_m_axi_uart_ARVALID : STD_LOGIC;
    signal grp_write_u8_fu_353_m_axi_uart_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_write_u8_fu_353_m_axi_uart_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_write_u8_fu_353_m_axi_uart_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_write_u8_fu_353_m_axi_uart_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_u8_fu_353_m_axi_uart_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_write_u8_fu_353_m_axi_uart_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_write_u8_fu_353_m_axi_uart_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_write_u8_fu_353_m_axi_uart_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_u8_fu_353_m_axi_uart_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_write_u8_fu_353_m_axi_uart_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_write_u8_fu_353_m_axi_uart_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_write_u8_fu_353_m_axi_uart_RREADY : STD_LOGIC;
    signal grp_write_u8_fu_353_m_axi_uart_BREADY : STD_LOGIC;
    signal grp_remove_hw_bkpt_fu_361_ap_start : STD_LOGIC;
    signal grp_remove_hw_bkpt_fu_361_ap_done : STD_LOGIC;
    signal grp_remove_hw_bkpt_fu_361_ap_idle : STD_LOGIC;
    signal grp_remove_hw_bkpt_fu_361_ap_ready : STD_LOGIC;
    signal grp_remove_hw_bkpt_fu_361_hbkpt_active_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_remove_hw_bkpt_fu_361_hbkpt_active_ce0 : STD_LOGIC;
    signal grp_remove_hw_bkpt_fu_361_hbkpt_active_we0 : STD_LOGIC;
    signal grp_remove_hw_bkpt_fu_361_hbkpt_active_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_remove_hw_bkpt_fu_361_hbkpt_target_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_remove_hw_bkpt_fu_361_hbkpt_target_ce0 : STD_LOGIC;
    signal grp_read_byte_fu_371_ap_start : STD_LOGIC;
    signal grp_read_byte_fu_371_ap_idle : STD_LOGIC;
    signal grp_read_byte_fu_371_m_axi_uart_AWVALID : STD_LOGIC;
    signal grp_read_byte_fu_371_m_axi_uart_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_read_byte_fu_371_m_axi_uart_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_read_byte_fu_371_m_axi_uart_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_read_byte_fu_371_m_axi_uart_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_read_byte_fu_371_m_axi_uart_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_read_byte_fu_371_m_axi_uart_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_read_byte_fu_371_m_axi_uart_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_read_byte_fu_371_m_axi_uart_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_read_byte_fu_371_m_axi_uart_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_read_byte_fu_371_m_axi_uart_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_read_byte_fu_371_m_axi_uart_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_read_byte_fu_371_m_axi_uart_WVALID : STD_LOGIC;
    signal grp_read_byte_fu_371_m_axi_uart_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_read_byte_fu_371_m_axi_uart_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_read_byte_fu_371_m_axi_uart_WLAST : STD_LOGIC;
    signal grp_read_byte_fu_371_m_axi_uart_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_read_byte_fu_371_m_axi_uart_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_read_byte_fu_371_m_axi_uart_ARVALID : STD_LOGIC;
    signal grp_read_byte_fu_371_m_axi_uart_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_read_byte_fu_371_m_axi_uart_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_read_byte_fu_371_m_axi_uart_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_read_byte_fu_371_m_axi_uart_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_read_byte_fu_371_m_axi_uart_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_read_byte_fu_371_m_axi_uart_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_read_byte_fu_371_m_axi_uart_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_read_byte_fu_371_m_axi_uart_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_read_byte_fu_371_m_axi_uart_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_read_byte_fu_371_m_axi_uart_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_read_byte_fu_371_m_axi_uart_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_read_byte_fu_371_m_axi_uart_RREADY : STD_LOGIC;
    signal grp_read_byte_fu_371_m_axi_uart_BREADY : STD_LOGIC;
    signal k_0_i_reg_290 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal grp_cpu_step_fu_301_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal grp_write_u32_fu_327_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal grp_read_u32_fu_338_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal grp_read_u8_fu_346_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal grp_write_u8_fu_353_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal grp_remove_hw_bkpt_fu_361_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_read_byte_fu_371_ap_start_reg : STD_LOGIC := '0';
    signal zext_ln280_fu_1016_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln268_fu_1034_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln116_fu_1051_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln115_fu_1056_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln114_fu_1061_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln113_fu_1066_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln102_fu_1085_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln329_fu_413_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln319_fu_426_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln276_fu_433_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln257_fu_440_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln247_fu_447_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln231_fu_454_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln225_fu_461_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state22_on_subcall_done : BOOLEAN;
    signal ap_block_state29_on_subcall_done : BOOLEAN;
    signal trunc_ln252_fu_1043_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal regid_fu_1020_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln268_fu_1030_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_388_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal lshr_ln_fu_1075_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal icmp_ln101_2_fu_1103_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln101_1_fu_1098_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln101_fu_1093_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln101_fu_1116_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln101_fu_1108_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln101_1_fu_1122_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state16_on_subcall_done : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_block_state7_on_subcall_done : BOOLEAN;
    signal ap_predicate_op140_call_state25 : BOOLEAN;
    signal ap_predicate_op142_call_state25 : BOOLEAN;
    signal ap_block_state25_on_subcall_done : BOOLEAN;
    signal ap_block_state33_on_subcall_done : BOOLEAN;

    component cpu_step IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        pc_i : IN STD_LOGIC_VECTOR (31 downto 0);
        pc_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        pc_o_ap_vld : OUT STD_LOGIC;
        hbkpt_active_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        hbkpt_active_ce0 : OUT STD_LOGIC;
        hbkpt_active_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        hbkpt_target_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        hbkpt_target_ce0 : OUT STD_LOGIC;
        hbkpt_target_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        mem0_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        mem0_ce0 : OUT STD_LOGIC;
        mem0_we0 : OUT STD_LOGIC;
        mem0_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        mem0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        mem1_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        mem1_ce0 : OUT STD_LOGIC;
        mem1_we0 : OUT STD_LOGIC;
        mem1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        mem1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        mem2_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        mem2_ce0 : OUT STD_LOGIC;
        mem2_we0 : OUT STD_LOGIC;
        mem2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        mem2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        mem3_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        mem3_ce0 : OUT STD_LOGIC;
        mem3_we0 : OUT STD_LOGIC;
        mem3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        mem3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        x_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        x_ce0 : OUT STD_LOGIC;
        x_we0 : OUT STD_LOGIC;
        x_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        x_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        x_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        x_ce1 : OUT STD_LOGIC;
        x_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        halted : OUT STD_LOGIC_VECTOR (0 downto 0);
        halted_ap_vld : OUT STD_LOGIC );
    end component;


    component write_u32 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_uart_AWVALID : OUT STD_LOGIC;
        m_axi_uart_AWREADY : IN STD_LOGIC;
        m_axi_uart_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_uart_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_uart_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_uart_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_uart_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_uart_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_uart_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_uart_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_uart_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_uart_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_uart_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_uart_WVALID : OUT STD_LOGIC;
        m_axi_uart_WREADY : IN STD_LOGIC;
        m_axi_uart_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_uart_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_uart_WLAST : OUT STD_LOGIC;
        m_axi_uart_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_uart_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_uart_ARVALID : OUT STD_LOGIC;
        m_axi_uart_ARREADY : IN STD_LOGIC;
        m_axi_uart_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_uart_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_uart_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_uart_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_uart_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_uart_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_uart_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_uart_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_uart_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_uart_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_uart_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_uart_RVALID : IN STD_LOGIC;
        m_axi_uart_RREADY : OUT STD_LOGIC;
        m_axi_uart_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_uart_RLAST : IN STD_LOGIC;
        m_axi_uart_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_uart_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_uart_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_uart_BVALID : IN STD_LOGIC;
        m_axi_uart_BREADY : OUT STD_LOGIC;
        m_axi_uart_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_uart_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_uart_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        uart_offset : IN STD_LOGIC_VECTOR (29 downto 0);
        value_r : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component read_u32 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_uart_AWVALID : OUT STD_LOGIC;
        m_axi_uart_AWREADY : IN STD_LOGIC;
        m_axi_uart_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_uart_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_uart_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_uart_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_uart_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_uart_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_uart_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_uart_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_uart_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_uart_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_uart_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_uart_WVALID : OUT STD_LOGIC;
        m_axi_uart_WREADY : IN STD_LOGIC;
        m_axi_uart_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_uart_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_uart_WLAST : OUT STD_LOGIC;
        m_axi_uart_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_uart_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_uart_ARVALID : OUT STD_LOGIC;
        m_axi_uart_ARREADY : IN STD_LOGIC;
        m_axi_uart_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_uart_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_uart_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_uart_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_uart_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_uart_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_uart_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_uart_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_uart_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_uart_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_uart_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_uart_RVALID : IN STD_LOGIC;
        m_axi_uart_RREADY : OUT STD_LOGIC;
        m_axi_uart_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_uart_RLAST : IN STD_LOGIC;
        m_axi_uart_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_uart_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_uart_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_uart_BVALID : IN STD_LOGIC;
        m_axi_uart_BREADY : OUT STD_LOGIC;
        m_axi_uart_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_uart_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_uart_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        uart_offset : IN STD_LOGIC_VECTOR (29 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component read_u8 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_uart_AWVALID : OUT STD_LOGIC;
        m_axi_uart_AWREADY : IN STD_LOGIC;
        m_axi_uart_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_uart_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_uart_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_uart_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_uart_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_uart_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_uart_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_uart_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_uart_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_uart_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_uart_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_uart_WVALID : OUT STD_LOGIC;
        m_axi_uart_WREADY : IN STD_LOGIC;
        m_axi_uart_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_uart_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_uart_WLAST : OUT STD_LOGIC;
        m_axi_uart_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_uart_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_uart_ARVALID : OUT STD_LOGIC;
        m_axi_uart_ARREADY : IN STD_LOGIC;
        m_axi_uart_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_uart_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_uart_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_uart_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_uart_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_uart_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_uart_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_uart_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_uart_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_uart_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_uart_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_uart_RVALID : IN STD_LOGIC;
        m_axi_uart_RREADY : OUT STD_LOGIC;
        m_axi_uart_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_uart_RLAST : IN STD_LOGIC;
        m_axi_uart_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_uart_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_uart_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_uart_BVALID : IN STD_LOGIC;
        m_axi_uart_BREADY : OUT STD_LOGIC;
        m_axi_uart_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_uart_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_uart_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        uart_offset : IN STD_LOGIC_VECTOR (29 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component write_u8 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_uart_AWVALID : OUT STD_LOGIC;
        m_axi_uart_AWREADY : IN STD_LOGIC;
        m_axi_uart_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_uart_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_uart_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_uart_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_uart_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_uart_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_uart_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_uart_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_uart_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_uart_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_uart_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_uart_WVALID : OUT STD_LOGIC;
        m_axi_uart_WREADY : IN STD_LOGIC;
        m_axi_uart_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_uart_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_uart_WLAST : OUT STD_LOGIC;
        m_axi_uart_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_uart_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_uart_ARVALID : OUT STD_LOGIC;
        m_axi_uart_ARREADY : IN STD_LOGIC;
        m_axi_uart_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_uart_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_uart_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_uart_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_uart_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_uart_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_uart_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_uart_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_uart_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_uart_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_uart_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_uart_RVALID : IN STD_LOGIC;
        m_axi_uart_RREADY : OUT STD_LOGIC;
        m_axi_uart_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_uart_RLAST : IN STD_LOGIC;
        m_axi_uart_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_uart_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_uart_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_uart_BVALID : IN STD_LOGIC;
        m_axi_uart_BREADY : OUT STD_LOGIC;
        m_axi_uart_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_uart_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_uart_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        uart_offset : IN STD_LOGIC_VECTOR (29 downto 0);
        value_r : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component remove_hw_bkpt IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        addr : IN STD_LOGIC_VECTOR (31 downto 0);
        hbkpt_active_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        hbkpt_active_ce0 : OUT STD_LOGIC;
        hbkpt_active_we0 : OUT STD_LOGIC;
        hbkpt_active_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        hbkpt_active_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        hbkpt_target_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        hbkpt_target_ce0 : OUT STD_LOGIC;
        hbkpt_target_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component read_byte IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_uart_AWVALID : OUT STD_LOGIC;
        m_axi_uart_AWREADY : IN STD_LOGIC;
        m_axi_uart_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_uart_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_uart_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_uart_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_uart_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_uart_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_uart_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_uart_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_uart_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_uart_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_uart_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_uart_WVALID : OUT STD_LOGIC;
        m_axi_uart_WREADY : IN STD_LOGIC;
        m_axi_uart_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_uart_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_uart_WLAST : OUT STD_LOGIC;
        m_axi_uart_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_uart_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_uart_ARVALID : OUT STD_LOGIC;
        m_axi_uart_ARREADY : IN STD_LOGIC;
        m_axi_uart_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_uart_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_uart_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_uart_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_uart_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_uart_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_uart_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_uart_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_uart_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_uart_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_uart_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_uart_RVALID : IN STD_LOGIC;
        m_axi_uart_RREADY : OUT STD_LOGIC;
        m_axi_uart_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_uart_RLAST : IN STD_LOGIC;
        m_axi_uart_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_uart_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_uart_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_uart_BVALID : IN STD_LOGIC;
        m_axi_uart_BREADY : OUT STD_LOGIC;
        m_axi_uart_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_uart_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_uart_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        uart_offset : IN STD_LOGIC_VECTOR (29 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component uart_master_mux_2ibs IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        din17_WIDTH : INTEGER;
        din18_WIDTH : INTEGER;
        din19_WIDTH : INTEGER;
        din20_WIDTH : INTEGER;
        din21_WIDTH : INTEGER;
        din22_WIDTH : INTEGER;
        din23_WIDTH : INTEGER;
        din24_WIDTH : INTEGER;
        din25_WIDTH : INTEGER;
        din26_WIDTH : INTEGER;
        din27_WIDTH : INTEGER;
        din28_WIDTH : INTEGER;
        din29_WIDTH : INTEGER;
        din30_WIDTH : INTEGER;
        din31_WIDTH : INTEGER;
        din32_WIDTH : INTEGER;
        din33_WIDTH : INTEGER;
        din34_WIDTH : INTEGER;
        din35_WIDTH : INTEGER;
        din36_WIDTH : INTEGER;
        din37_WIDTH : INTEGER;
        din38_WIDTH : INTEGER;
        din39_WIDTH : INTEGER;
        din40_WIDTH : INTEGER;
        din41_WIDTH : INTEGER;
        din42_WIDTH : INTEGER;
        din43_WIDTH : INTEGER;
        din44_WIDTH : INTEGER;
        din45_WIDTH : INTEGER;
        din46_WIDTH : INTEGER;
        din47_WIDTH : INTEGER;
        din48_WIDTH : INTEGER;
        din49_WIDTH : INTEGER;
        din50_WIDTH : INTEGER;
        din51_WIDTH : INTEGER;
        din52_WIDTH : INTEGER;
        din53_WIDTH : INTEGER;
        din54_WIDTH : INTEGER;
        din55_WIDTH : INTEGER;
        din56_WIDTH : INTEGER;
        din57_WIDTH : INTEGER;
        din58_WIDTH : INTEGER;
        din59_WIDTH : INTEGER;
        din60_WIDTH : INTEGER;
        din61_WIDTH : INTEGER;
        din62_WIDTH : INTEGER;
        din63_WIDTH : INTEGER;
        din64_WIDTH : INTEGER;
        din65_WIDTH : INTEGER;
        din66_WIDTH : INTEGER;
        din67_WIDTH : INTEGER;
        din68_WIDTH : INTEGER;
        din69_WIDTH : INTEGER;
        din70_WIDTH : INTEGER;
        din71_WIDTH : INTEGER;
        din72_WIDTH : INTEGER;
        din73_WIDTH : INTEGER;
        din74_WIDTH : INTEGER;
        din75_WIDTH : INTEGER;
        din76_WIDTH : INTEGER;
        din77_WIDTH : INTEGER;
        din78_WIDTH : INTEGER;
        din79_WIDTH : INTEGER;
        din80_WIDTH : INTEGER;
        din81_WIDTH : INTEGER;
        din82_WIDTH : INTEGER;
        din83_WIDTH : INTEGER;
        din84_WIDTH : INTEGER;
        din85_WIDTH : INTEGER;
        din86_WIDTH : INTEGER;
        din87_WIDTH : INTEGER;
        din88_WIDTH : INTEGER;
        din89_WIDTH : INTEGER;
        din90_WIDTH : INTEGER;
        din91_WIDTH : INTEGER;
        din92_WIDTH : INTEGER;
        din93_WIDTH : INTEGER;
        din94_WIDTH : INTEGER;
        din95_WIDTH : INTEGER;
        din96_WIDTH : INTEGER;
        din97_WIDTH : INTEGER;
        din98_WIDTH : INTEGER;
        din99_WIDTH : INTEGER;
        din100_WIDTH : INTEGER;
        din101_WIDTH : INTEGER;
        din102_WIDTH : INTEGER;
        din103_WIDTH : INTEGER;
        din104_WIDTH : INTEGER;
        din105_WIDTH : INTEGER;
        din106_WIDTH : INTEGER;
        din107_WIDTH : INTEGER;
        din108_WIDTH : INTEGER;
        din109_WIDTH : INTEGER;
        din110_WIDTH : INTEGER;
        din111_WIDTH : INTEGER;
        din112_WIDTH : INTEGER;
        din113_WIDTH : INTEGER;
        din114_WIDTH : INTEGER;
        din115_WIDTH : INTEGER;
        din116_WIDTH : INTEGER;
        din117_WIDTH : INTEGER;
        din118_WIDTH : INTEGER;
        din119_WIDTH : INTEGER;
        din120_WIDTH : INTEGER;
        din121_WIDTH : INTEGER;
        din122_WIDTH : INTEGER;
        din123_WIDTH : INTEGER;
        din124_WIDTH : INTEGER;
        din125_WIDTH : INTEGER;
        din126_WIDTH : INTEGER;
        din127_WIDTH : INTEGER;
        din128_WIDTH : INTEGER;
        din129_WIDTH : INTEGER;
        din130_WIDTH : INTEGER;
        din131_WIDTH : INTEGER;
        din132_WIDTH : INTEGER;
        din133_WIDTH : INTEGER;
        din134_WIDTH : INTEGER;
        din135_WIDTH : INTEGER;
        din136_WIDTH : INTEGER;
        din137_WIDTH : INTEGER;
        din138_WIDTH : INTEGER;
        din139_WIDTH : INTEGER;
        din140_WIDTH : INTEGER;
        din141_WIDTH : INTEGER;
        din142_WIDTH : INTEGER;
        din143_WIDTH : INTEGER;
        din144_WIDTH : INTEGER;
        din145_WIDTH : INTEGER;
        din146_WIDTH : INTEGER;
        din147_WIDTH : INTEGER;
        din148_WIDTH : INTEGER;
        din149_WIDTH : INTEGER;
        din150_WIDTH : INTEGER;
        din151_WIDTH : INTEGER;
        din152_WIDTH : INTEGER;
        din153_WIDTH : INTEGER;
        din154_WIDTH : INTEGER;
        din155_WIDTH : INTEGER;
        din156_WIDTH : INTEGER;
        din157_WIDTH : INTEGER;
        din158_WIDTH : INTEGER;
        din159_WIDTH : INTEGER;
        din160_WIDTH : INTEGER;
        din161_WIDTH : INTEGER;
        din162_WIDTH : INTEGER;
        din163_WIDTH : INTEGER;
        din164_WIDTH : INTEGER;
        din165_WIDTH : INTEGER;
        din166_WIDTH : INTEGER;
        din167_WIDTH : INTEGER;
        din168_WIDTH : INTEGER;
        din169_WIDTH : INTEGER;
        din170_WIDTH : INTEGER;
        din171_WIDTH : INTEGER;
        din172_WIDTH : INTEGER;
        din173_WIDTH : INTEGER;
        din174_WIDTH : INTEGER;
        din175_WIDTH : INTEGER;
        din176_WIDTH : INTEGER;
        din177_WIDTH : INTEGER;
        din178_WIDTH : INTEGER;
        din179_WIDTH : INTEGER;
        din180_WIDTH : INTEGER;
        din181_WIDTH : INTEGER;
        din182_WIDTH : INTEGER;
        din183_WIDTH : INTEGER;
        din184_WIDTH : INTEGER;
        din185_WIDTH : INTEGER;
        din186_WIDTH : INTEGER;
        din187_WIDTH : INTEGER;
        din188_WIDTH : INTEGER;
        din189_WIDTH : INTEGER;
        din190_WIDTH : INTEGER;
        din191_WIDTH : INTEGER;
        din192_WIDTH : INTEGER;
        din193_WIDTH : INTEGER;
        din194_WIDTH : INTEGER;
        din195_WIDTH : INTEGER;
        din196_WIDTH : INTEGER;
        din197_WIDTH : INTEGER;
        din198_WIDTH : INTEGER;
        din199_WIDTH : INTEGER;
        din200_WIDTH : INTEGER;
        din201_WIDTH : INTEGER;
        din202_WIDTH : INTEGER;
        din203_WIDTH : INTEGER;
        din204_WIDTH : INTEGER;
        din205_WIDTH : INTEGER;
        din206_WIDTH : INTEGER;
        din207_WIDTH : INTEGER;
        din208_WIDTH : INTEGER;
        din209_WIDTH : INTEGER;
        din210_WIDTH : INTEGER;
        din211_WIDTH : INTEGER;
        din212_WIDTH : INTEGER;
        din213_WIDTH : INTEGER;
        din214_WIDTH : INTEGER;
        din215_WIDTH : INTEGER;
        din216_WIDTH : INTEGER;
        din217_WIDTH : INTEGER;
        din218_WIDTH : INTEGER;
        din219_WIDTH : INTEGER;
        din220_WIDTH : INTEGER;
        din221_WIDTH : INTEGER;
        din222_WIDTH : INTEGER;
        din223_WIDTH : INTEGER;
        din224_WIDTH : INTEGER;
        din225_WIDTH : INTEGER;
        din226_WIDTH : INTEGER;
        din227_WIDTH : INTEGER;
        din228_WIDTH : INTEGER;
        din229_WIDTH : INTEGER;
        din230_WIDTH : INTEGER;
        din231_WIDTH : INTEGER;
        din232_WIDTH : INTEGER;
        din233_WIDTH : INTEGER;
        din234_WIDTH : INTEGER;
        din235_WIDTH : INTEGER;
        din236_WIDTH : INTEGER;
        din237_WIDTH : INTEGER;
        din238_WIDTH : INTEGER;
        din239_WIDTH : INTEGER;
        din240_WIDTH : INTEGER;
        din241_WIDTH : INTEGER;
        din242_WIDTH : INTEGER;
        din243_WIDTH : INTEGER;
        din244_WIDTH : INTEGER;
        din245_WIDTH : INTEGER;
        din246_WIDTH : INTEGER;
        din247_WIDTH : INTEGER;
        din248_WIDTH : INTEGER;
        din249_WIDTH : INTEGER;
        din250_WIDTH : INTEGER;
        din251_WIDTH : INTEGER;
        din252_WIDTH : INTEGER;
        din253_WIDTH : INTEGER;
        din254_WIDTH : INTEGER;
        din255_WIDTH : INTEGER;
        din256_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (31 downto 0);
        din11 : IN STD_LOGIC_VECTOR (31 downto 0);
        din12 : IN STD_LOGIC_VECTOR (31 downto 0);
        din13 : IN STD_LOGIC_VECTOR (31 downto 0);
        din14 : IN STD_LOGIC_VECTOR (31 downto 0);
        din15 : IN STD_LOGIC_VECTOR (31 downto 0);
        din16 : IN STD_LOGIC_VECTOR (31 downto 0);
        din17 : IN STD_LOGIC_VECTOR (31 downto 0);
        din18 : IN STD_LOGIC_VECTOR (31 downto 0);
        din19 : IN STD_LOGIC_VECTOR (31 downto 0);
        din20 : IN STD_LOGIC_VECTOR (31 downto 0);
        din21 : IN STD_LOGIC_VECTOR (31 downto 0);
        din22 : IN STD_LOGIC_VECTOR (31 downto 0);
        din23 : IN STD_LOGIC_VECTOR (31 downto 0);
        din24 : IN STD_LOGIC_VECTOR (31 downto 0);
        din25 : IN STD_LOGIC_VECTOR (31 downto 0);
        din26 : IN STD_LOGIC_VECTOR (31 downto 0);
        din27 : IN STD_LOGIC_VECTOR (31 downto 0);
        din28 : IN STD_LOGIC_VECTOR (31 downto 0);
        din29 : IN STD_LOGIC_VECTOR (31 downto 0);
        din30 : IN STD_LOGIC_VECTOR (31 downto 0);
        din31 : IN STD_LOGIC_VECTOR (31 downto 0);
        din32 : IN STD_LOGIC_VECTOR (31 downto 0);
        din33 : IN STD_LOGIC_VECTOR (31 downto 0);
        din34 : IN STD_LOGIC_VECTOR (31 downto 0);
        din35 : IN STD_LOGIC_VECTOR (31 downto 0);
        din36 : IN STD_LOGIC_VECTOR (31 downto 0);
        din37 : IN STD_LOGIC_VECTOR (31 downto 0);
        din38 : IN STD_LOGIC_VECTOR (31 downto 0);
        din39 : IN STD_LOGIC_VECTOR (31 downto 0);
        din40 : IN STD_LOGIC_VECTOR (31 downto 0);
        din41 : IN STD_LOGIC_VECTOR (31 downto 0);
        din42 : IN STD_LOGIC_VECTOR (31 downto 0);
        din43 : IN STD_LOGIC_VECTOR (31 downto 0);
        din44 : IN STD_LOGIC_VECTOR (31 downto 0);
        din45 : IN STD_LOGIC_VECTOR (31 downto 0);
        din46 : IN STD_LOGIC_VECTOR (31 downto 0);
        din47 : IN STD_LOGIC_VECTOR (31 downto 0);
        din48 : IN STD_LOGIC_VECTOR (31 downto 0);
        din49 : IN STD_LOGIC_VECTOR (31 downto 0);
        din50 : IN STD_LOGIC_VECTOR (31 downto 0);
        din51 : IN STD_LOGIC_VECTOR (31 downto 0);
        din52 : IN STD_LOGIC_VECTOR (31 downto 0);
        din53 : IN STD_LOGIC_VECTOR (31 downto 0);
        din54 : IN STD_LOGIC_VECTOR (31 downto 0);
        din55 : IN STD_LOGIC_VECTOR (31 downto 0);
        din56 : IN STD_LOGIC_VECTOR (31 downto 0);
        din57 : IN STD_LOGIC_VECTOR (31 downto 0);
        din58 : IN STD_LOGIC_VECTOR (31 downto 0);
        din59 : IN STD_LOGIC_VECTOR (31 downto 0);
        din60 : IN STD_LOGIC_VECTOR (31 downto 0);
        din61 : IN STD_LOGIC_VECTOR (31 downto 0);
        din62 : IN STD_LOGIC_VECTOR (31 downto 0);
        din63 : IN STD_LOGIC_VECTOR (31 downto 0);
        din64 : IN STD_LOGIC_VECTOR (31 downto 0);
        din65 : IN STD_LOGIC_VECTOR (31 downto 0);
        din66 : IN STD_LOGIC_VECTOR (31 downto 0);
        din67 : IN STD_LOGIC_VECTOR (31 downto 0);
        din68 : IN STD_LOGIC_VECTOR (31 downto 0);
        din69 : IN STD_LOGIC_VECTOR (31 downto 0);
        din70 : IN STD_LOGIC_VECTOR (31 downto 0);
        din71 : IN STD_LOGIC_VECTOR (31 downto 0);
        din72 : IN STD_LOGIC_VECTOR (31 downto 0);
        din73 : IN STD_LOGIC_VECTOR (31 downto 0);
        din74 : IN STD_LOGIC_VECTOR (31 downto 0);
        din75 : IN STD_LOGIC_VECTOR (31 downto 0);
        din76 : IN STD_LOGIC_VECTOR (31 downto 0);
        din77 : IN STD_LOGIC_VECTOR (31 downto 0);
        din78 : IN STD_LOGIC_VECTOR (31 downto 0);
        din79 : IN STD_LOGIC_VECTOR (31 downto 0);
        din80 : IN STD_LOGIC_VECTOR (31 downto 0);
        din81 : IN STD_LOGIC_VECTOR (31 downto 0);
        din82 : IN STD_LOGIC_VECTOR (31 downto 0);
        din83 : IN STD_LOGIC_VECTOR (31 downto 0);
        din84 : IN STD_LOGIC_VECTOR (31 downto 0);
        din85 : IN STD_LOGIC_VECTOR (31 downto 0);
        din86 : IN STD_LOGIC_VECTOR (31 downto 0);
        din87 : IN STD_LOGIC_VECTOR (31 downto 0);
        din88 : IN STD_LOGIC_VECTOR (31 downto 0);
        din89 : IN STD_LOGIC_VECTOR (31 downto 0);
        din90 : IN STD_LOGIC_VECTOR (31 downto 0);
        din91 : IN STD_LOGIC_VECTOR (31 downto 0);
        din92 : IN STD_LOGIC_VECTOR (31 downto 0);
        din93 : IN STD_LOGIC_VECTOR (31 downto 0);
        din94 : IN STD_LOGIC_VECTOR (31 downto 0);
        din95 : IN STD_LOGIC_VECTOR (31 downto 0);
        din96 : IN STD_LOGIC_VECTOR (31 downto 0);
        din97 : IN STD_LOGIC_VECTOR (31 downto 0);
        din98 : IN STD_LOGIC_VECTOR (31 downto 0);
        din99 : IN STD_LOGIC_VECTOR (31 downto 0);
        din100 : IN STD_LOGIC_VECTOR (31 downto 0);
        din101 : IN STD_LOGIC_VECTOR (31 downto 0);
        din102 : IN STD_LOGIC_VECTOR (31 downto 0);
        din103 : IN STD_LOGIC_VECTOR (31 downto 0);
        din104 : IN STD_LOGIC_VECTOR (31 downto 0);
        din105 : IN STD_LOGIC_VECTOR (31 downto 0);
        din106 : IN STD_LOGIC_VECTOR (31 downto 0);
        din107 : IN STD_LOGIC_VECTOR (31 downto 0);
        din108 : IN STD_LOGIC_VECTOR (31 downto 0);
        din109 : IN STD_LOGIC_VECTOR (31 downto 0);
        din110 : IN STD_LOGIC_VECTOR (31 downto 0);
        din111 : IN STD_LOGIC_VECTOR (31 downto 0);
        din112 : IN STD_LOGIC_VECTOR (31 downto 0);
        din113 : IN STD_LOGIC_VECTOR (31 downto 0);
        din114 : IN STD_LOGIC_VECTOR (31 downto 0);
        din115 : IN STD_LOGIC_VECTOR (31 downto 0);
        din116 : IN STD_LOGIC_VECTOR (31 downto 0);
        din117 : IN STD_LOGIC_VECTOR (31 downto 0);
        din118 : IN STD_LOGIC_VECTOR (31 downto 0);
        din119 : IN STD_LOGIC_VECTOR (31 downto 0);
        din120 : IN STD_LOGIC_VECTOR (31 downto 0);
        din121 : IN STD_LOGIC_VECTOR (31 downto 0);
        din122 : IN STD_LOGIC_VECTOR (31 downto 0);
        din123 : IN STD_LOGIC_VECTOR (31 downto 0);
        din124 : IN STD_LOGIC_VECTOR (31 downto 0);
        din125 : IN STD_LOGIC_VECTOR (31 downto 0);
        din126 : IN STD_LOGIC_VECTOR (31 downto 0);
        din127 : IN STD_LOGIC_VECTOR (31 downto 0);
        din128 : IN STD_LOGIC_VECTOR (31 downto 0);
        din129 : IN STD_LOGIC_VECTOR (31 downto 0);
        din130 : IN STD_LOGIC_VECTOR (31 downto 0);
        din131 : IN STD_LOGIC_VECTOR (31 downto 0);
        din132 : IN STD_LOGIC_VECTOR (31 downto 0);
        din133 : IN STD_LOGIC_VECTOR (31 downto 0);
        din134 : IN STD_LOGIC_VECTOR (31 downto 0);
        din135 : IN STD_LOGIC_VECTOR (31 downto 0);
        din136 : IN STD_LOGIC_VECTOR (31 downto 0);
        din137 : IN STD_LOGIC_VECTOR (31 downto 0);
        din138 : IN STD_LOGIC_VECTOR (31 downto 0);
        din139 : IN STD_LOGIC_VECTOR (31 downto 0);
        din140 : IN STD_LOGIC_VECTOR (31 downto 0);
        din141 : IN STD_LOGIC_VECTOR (31 downto 0);
        din142 : IN STD_LOGIC_VECTOR (31 downto 0);
        din143 : IN STD_LOGIC_VECTOR (31 downto 0);
        din144 : IN STD_LOGIC_VECTOR (31 downto 0);
        din145 : IN STD_LOGIC_VECTOR (31 downto 0);
        din146 : IN STD_LOGIC_VECTOR (31 downto 0);
        din147 : IN STD_LOGIC_VECTOR (31 downto 0);
        din148 : IN STD_LOGIC_VECTOR (31 downto 0);
        din149 : IN STD_LOGIC_VECTOR (31 downto 0);
        din150 : IN STD_LOGIC_VECTOR (31 downto 0);
        din151 : IN STD_LOGIC_VECTOR (31 downto 0);
        din152 : IN STD_LOGIC_VECTOR (31 downto 0);
        din153 : IN STD_LOGIC_VECTOR (31 downto 0);
        din154 : IN STD_LOGIC_VECTOR (31 downto 0);
        din155 : IN STD_LOGIC_VECTOR (31 downto 0);
        din156 : IN STD_LOGIC_VECTOR (31 downto 0);
        din157 : IN STD_LOGIC_VECTOR (31 downto 0);
        din158 : IN STD_LOGIC_VECTOR (31 downto 0);
        din159 : IN STD_LOGIC_VECTOR (31 downto 0);
        din160 : IN STD_LOGIC_VECTOR (31 downto 0);
        din161 : IN STD_LOGIC_VECTOR (31 downto 0);
        din162 : IN STD_LOGIC_VECTOR (31 downto 0);
        din163 : IN STD_LOGIC_VECTOR (31 downto 0);
        din164 : IN STD_LOGIC_VECTOR (31 downto 0);
        din165 : IN STD_LOGIC_VECTOR (31 downto 0);
        din166 : IN STD_LOGIC_VECTOR (31 downto 0);
        din167 : IN STD_LOGIC_VECTOR (31 downto 0);
        din168 : IN STD_LOGIC_VECTOR (31 downto 0);
        din169 : IN STD_LOGIC_VECTOR (31 downto 0);
        din170 : IN STD_LOGIC_VECTOR (31 downto 0);
        din171 : IN STD_LOGIC_VECTOR (31 downto 0);
        din172 : IN STD_LOGIC_VECTOR (31 downto 0);
        din173 : IN STD_LOGIC_VECTOR (31 downto 0);
        din174 : IN STD_LOGIC_VECTOR (31 downto 0);
        din175 : IN STD_LOGIC_VECTOR (31 downto 0);
        din176 : IN STD_LOGIC_VECTOR (31 downto 0);
        din177 : IN STD_LOGIC_VECTOR (31 downto 0);
        din178 : IN STD_LOGIC_VECTOR (31 downto 0);
        din179 : IN STD_LOGIC_VECTOR (31 downto 0);
        din180 : IN STD_LOGIC_VECTOR (31 downto 0);
        din181 : IN STD_LOGIC_VECTOR (31 downto 0);
        din182 : IN STD_LOGIC_VECTOR (31 downto 0);
        din183 : IN STD_LOGIC_VECTOR (31 downto 0);
        din184 : IN STD_LOGIC_VECTOR (31 downto 0);
        din185 : IN STD_LOGIC_VECTOR (31 downto 0);
        din186 : IN STD_LOGIC_VECTOR (31 downto 0);
        din187 : IN STD_LOGIC_VECTOR (31 downto 0);
        din188 : IN STD_LOGIC_VECTOR (31 downto 0);
        din189 : IN STD_LOGIC_VECTOR (31 downto 0);
        din190 : IN STD_LOGIC_VECTOR (31 downto 0);
        din191 : IN STD_LOGIC_VECTOR (31 downto 0);
        din192 : IN STD_LOGIC_VECTOR (31 downto 0);
        din193 : IN STD_LOGIC_VECTOR (31 downto 0);
        din194 : IN STD_LOGIC_VECTOR (31 downto 0);
        din195 : IN STD_LOGIC_VECTOR (31 downto 0);
        din196 : IN STD_LOGIC_VECTOR (31 downto 0);
        din197 : IN STD_LOGIC_VECTOR (31 downto 0);
        din198 : IN STD_LOGIC_VECTOR (31 downto 0);
        din199 : IN STD_LOGIC_VECTOR (31 downto 0);
        din200 : IN STD_LOGIC_VECTOR (31 downto 0);
        din201 : IN STD_LOGIC_VECTOR (31 downto 0);
        din202 : IN STD_LOGIC_VECTOR (31 downto 0);
        din203 : IN STD_LOGIC_VECTOR (31 downto 0);
        din204 : IN STD_LOGIC_VECTOR (31 downto 0);
        din205 : IN STD_LOGIC_VECTOR (31 downto 0);
        din206 : IN STD_LOGIC_VECTOR (31 downto 0);
        din207 : IN STD_LOGIC_VECTOR (31 downto 0);
        din208 : IN STD_LOGIC_VECTOR (31 downto 0);
        din209 : IN STD_LOGIC_VECTOR (31 downto 0);
        din210 : IN STD_LOGIC_VECTOR (31 downto 0);
        din211 : IN STD_LOGIC_VECTOR (31 downto 0);
        din212 : IN STD_LOGIC_VECTOR (31 downto 0);
        din213 : IN STD_LOGIC_VECTOR (31 downto 0);
        din214 : IN STD_LOGIC_VECTOR (31 downto 0);
        din215 : IN STD_LOGIC_VECTOR (31 downto 0);
        din216 : IN STD_LOGIC_VECTOR (31 downto 0);
        din217 : IN STD_LOGIC_VECTOR (31 downto 0);
        din218 : IN STD_LOGIC_VECTOR (31 downto 0);
        din219 : IN STD_LOGIC_VECTOR (31 downto 0);
        din220 : IN STD_LOGIC_VECTOR (31 downto 0);
        din221 : IN STD_LOGIC_VECTOR (31 downto 0);
        din222 : IN STD_LOGIC_VECTOR (31 downto 0);
        din223 : IN STD_LOGIC_VECTOR (31 downto 0);
        din224 : IN STD_LOGIC_VECTOR (31 downto 0);
        din225 : IN STD_LOGIC_VECTOR (31 downto 0);
        din226 : IN STD_LOGIC_VECTOR (31 downto 0);
        din227 : IN STD_LOGIC_VECTOR (31 downto 0);
        din228 : IN STD_LOGIC_VECTOR (31 downto 0);
        din229 : IN STD_LOGIC_VECTOR (31 downto 0);
        din230 : IN STD_LOGIC_VECTOR (31 downto 0);
        din231 : IN STD_LOGIC_VECTOR (31 downto 0);
        din232 : IN STD_LOGIC_VECTOR (31 downto 0);
        din233 : IN STD_LOGIC_VECTOR (31 downto 0);
        din234 : IN STD_LOGIC_VECTOR (31 downto 0);
        din235 : IN STD_LOGIC_VECTOR (31 downto 0);
        din236 : IN STD_LOGIC_VECTOR (31 downto 0);
        din237 : IN STD_LOGIC_VECTOR (31 downto 0);
        din238 : IN STD_LOGIC_VECTOR (31 downto 0);
        din239 : IN STD_LOGIC_VECTOR (31 downto 0);
        din240 : IN STD_LOGIC_VECTOR (31 downto 0);
        din241 : IN STD_LOGIC_VECTOR (31 downto 0);
        din242 : IN STD_LOGIC_VECTOR (31 downto 0);
        din243 : IN STD_LOGIC_VECTOR (31 downto 0);
        din244 : IN STD_LOGIC_VECTOR (31 downto 0);
        din245 : IN STD_LOGIC_VECTOR (31 downto 0);
        din246 : IN STD_LOGIC_VECTOR (31 downto 0);
        din247 : IN STD_LOGIC_VECTOR (31 downto 0);
        din248 : IN STD_LOGIC_VECTOR (31 downto 0);
        din249 : IN STD_LOGIC_VECTOR (31 downto 0);
        din250 : IN STD_LOGIC_VECTOR (31 downto 0);
        din251 : IN STD_LOGIC_VECTOR (31 downto 0);
        din252 : IN STD_LOGIC_VECTOR (31 downto 0);
        din253 : IN STD_LOGIC_VECTOR (31 downto 0);
        din254 : IN STD_LOGIC_VECTOR (31 downto 0);
        din255 : IN STD_LOGIC_VECTOR (31 downto 0);
        din256 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component process_debug_combkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component process_debug_comcud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component process_debug_comdEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component process_debug_comeOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component process_debug_comfYi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component process_debug_comg8j IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (0 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component process_debug_comhbi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    mem0_U : component process_debug_combkb
    generic map (
        DataWidth => 8,
        AddressRange => 16384,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mem0_address0,
        ce0 => mem0_ce0,
        we0 => mem0_we0,
        d0 => mem0_d0,
        q0 => mem0_q0);

    mem1_U : component process_debug_comcud
    generic map (
        DataWidth => 8,
        AddressRange => 16384,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mem1_address0,
        ce0 => mem1_ce0,
        we0 => mem1_we0,
        d0 => mem1_d0,
        q0 => mem1_q0);

    mem2_U : component process_debug_comdEe
    generic map (
        DataWidth => 8,
        AddressRange => 16384,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mem2_address0,
        ce0 => mem2_ce0,
        we0 => mem2_we0,
        d0 => mem2_d0,
        q0 => mem2_q0);

    mem3_U : component process_debug_comeOg
    generic map (
        DataWidth => 8,
        AddressRange => 16384,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mem3_address0,
        ce0 => mem3_ce0,
        we0 => mem3_we0,
        d0 => mem3_d0,
        q0 => mem3_q0);

    x_U : component process_debug_comfYi
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => x_address0,
        ce0 => x_ce0,
        we0 => x_we0,
        d0 => x_d0,
        q0 => x_q0,
        address1 => grp_cpu_step_fu_301_x_address1,
        ce1 => x_ce1,
        q1 => x_q1);

    hbkpt_active_U : component process_debug_comg8j
    generic map (
        DataWidth => 1,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => hbkpt_active_address0,
        ce0 => hbkpt_active_ce0,
        we0 => hbkpt_active_we0,
        d0 => hbkpt_active_d0,
        q0 => hbkpt_active_q0);

    hbkpt_target_U : component process_debug_comhbi
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => hbkpt_target_address0,
        ce0 => hbkpt_target_ce0,
        we0 => hbkpt_target_we0,
        d0 => reg_402,
        q0 => hbkpt_target_q0);

    grp_cpu_step_fu_301 : component cpu_step
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_cpu_step_fu_301_ap_start,
        ap_done => grp_cpu_step_fu_301_ap_done,
        ap_idle => grp_cpu_step_fu_301_ap_idle,
        ap_ready => grp_cpu_step_fu_301_ap_ready,
        pc_i => pc_i,
        pc_o => grp_cpu_step_fu_301_pc_o,
        pc_o_ap_vld => grp_cpu_step_fu_301_pc_o_ap_vld,
        hbkpt_active_address0 => grp_cpu_step_fu_301_hbkpt_active_address0,
        hbkpt_active_ce0 => grp_cpu_step_fu_301_hbkpt_active_ce0,
        hbkpt_active_q0 => hbkpt_active_q0,
        hbkpt_target_address0 => grp_cpu_step_fu_301_hbkpt_target_address0,
        hbkpt_target_ce0 => grp_cpu_step_fu_301_hbkpt_target_ce0,
        hbkpt_target_q0 => hbkpt_target_q0,
        mem0_address0 => grp_cpu_step_fu_301_mem0_address0,
        mem0_ce0 => grp_cpu_step_fu_301_mem0_ce0,
        mem0_we0 => grp_cpu_step_fu_301_mem0_we0,
        mem0_d0 => grp_cpu_step_fu_301_mem0_d0,
        mem0_q0 => mem0_q0,
        mem1_address0 => grp_cpu_step_fu_301_mem1_address0,
        mem1_ce0 => grp_cpu_step_fu_301_mem1_ce0,
        mem1_we0 => grp_cpu_step_fu_301_mem1_we0,
        mem1_d0 => grp_cpu_step_fu_301_mem1_d0,
        mem1_q0 => mem1_q0,
        mem2_address0 => grp_cpu_step_fu_301_mem2_address0,
        mem2_ce0 => grp_cpu_step_fu_301_mem2_ce0,
        mem2_we0 => grp_cpu_step_fu_301_mem2_we0,
        mem2_d0 => grp_cpu_step_fu_301_mem2_d0,
        mem2_q0 => mem2_q0,
        mem3_address0 => grp_cpu_step_fu_301_mem3_address0,
        mem3_ce0 => grp_cpu_step_fu_301_mem3_ce0,
        mem3_we0 => grp_cpu_step_fu_301_mem3_we0,
        mem3_d0 => grp_cpu_step_fu_301_mem3_d0,
        mem3_q0 => mem3_q0,
        x_address0 => grp_cpu_step_fu_301_x_address0,
        x_ce0 => grp_cpu_step_fu_301_x_ce0,
        x_we0 => grp_cpu_step_fu_301_x_we0,
        x_d0 => grp_cpu_step_fu_301_x_d0,
        x_q0 => x_q0,
        x_address1 => grp_cpu_step_fu_301_x_address1,
        x_ce1 => grp_cpu_step_fu_301_x_ce1,
        x_q1 => x_q1,
        halted => grp_cpu_step_fu_301_halted,
        halted_ap_vld => grp_cpu_step_fu_301_halted_ap_vld);

    grp_write_u32_fu_327 : component write_u32
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_write_u32_fu_327_ap_start,
        ap_done => grp_write_u32_fu_327_ap_done,
        ap_idle => grp_write_u32_fu_327_ap_idle,
        ap_ready => grp_write_u32_fu_327_ap_ready,
        m_axi_uart_AWVALID => grp_write_u32_fu_327_m_axi_uart_AWVALID,
        m_axi_uart_AWREADY => m_axi_uart_AWREADY,
        m_axi_uart_AWADDR => grp_write_u32_fu_327_m_axi_uart_AWADDR,
        m_axi_uart_AWID => grp_write_u32_fu_327_m_axi_uart_AWID,
        m_axi_uart_AWLEN => grp_write_u32_fu_327_m_axi_uart_AWLEN,
        m_axi_uart_AWSIZE => grp_write_u32_fu_327_m_axi_uart_AWSIZE,
        m_axi_uart_AWBURST => grp_write_u32_fu_327_m_axi_uart_AWBURST,
        m_axi_uart_AWLOCK => grp_write_u32_fu_327_m_axi_uart_AWLOCK,
        m_axi_uart_AWCACHE => grp_write_u32_fu_327_m_axi_uart_AWCACHE,
        m_axi_uart_AWPROT => grp_write_u32_fu_327_m_axi_uart_AWPROT,
        m_axi_uart_AWQOS => grp_write_u32_fu_327_m_axi_uart_AWQOS,
        m_axi_uart_AWREGION => grp_write_u32_fu_327_m_axi_uart_AWREGION,
        m_axi_uart_AWUSER => grp_write_u32_fu_327_m_axi_uart_AWUSER,
        m_axi_uart_WVALID => grp_write_u32_fu_327_m_axi_uart_WVALID,
        m_axi_uart_WREADY => m_axi_uart_WREADY,
        m_axi_uart_WDATA => grp_write_u32_fu_327_m_axi_uart_WDATA,
        m_axi_uart_WSTRB => grp_write_u32_fu_327_m_axi_uart_WSTRB,
        m_axi_uart_WLAST => grp_write_u32_fu_327_m_axi_uart_WLAST,
        m_axi_uart_WID => grp_write_u32_fu_327_m_axi_uart_WID,
        m_axi_uart_WUSER => grp_write_u32_fu_327_m_axi_uart_WUSER,
        m_axi_uart_ARVALID => grp_write_u32_fu_327_m_axi_uart_ARVALID,
        m_axi_uart_ARREADY => m_axi_uart_ARREADY,
        m_axi_uart_ARADDR => grp_write_u32_fu_327_m_axi_uart_ARADDR,
        m_axi_uart_ARID => grp_write_u32_fu_327_m_axi_uart_ARID,
        m_axi_uart_ARLEN => grp_write_u32_fu_327_m_axi_uart_ARLEN,
        m_axi_uart_ARSIZE => grp_write_u32_fu_327_m_axi_uart_ARSIZE,
        m_axi_uart_ARBURST => grp_write_u32_fu_327_m_axi_uart_ARBURST,
        m_axi_uart_ARLOCK => grp_write_u32_fu_327_m_axi_uart_ARLOCK,
        m_axi_uart_ARCACHE => grp_write_u32_fu_327_m_axi_uart_ARCACHE,
        m_axi_uart_ARPROT => grp_write_u32_fu_327_m_axi_uart_ARPROT,
        m_axi_uart_ARQOS => grp_write_u32_fu_327_m_axi_uart_ARQOS,
        m_axi_uart_ARREGION => grp_write_u32_fu_327_m_axi_uart_ARREGION,
        m_axi_uart_ARUSER => grp_write_u32_fu_327_m_axi_uart_ARUSER,
        m_axi_uart_RVALID => m_axi_uart_RVALID,
        m_axi_uart_RREADY => grp_write_u32_fu_327_m_axi_uart_RREADY,
        m_axi_uart_RDATA => m_axi_uart_RDATA,
        m_axi_uart_RLAST => m_axi_uart_RLAST,
        m_axi_uart_RID => m_axi_uart_RID,
        m_axi_uart_RUSER => m_axi_uart_RUSER,
        m_axi_uart_RRESP => m_axi_uart_RRESP,
        m_axi_uart_BVALID => m_axi_uart_BVALID,
        m_axi_uart_BREADY => grp_write_u32_fu_327_m_axi_uart_BREADY,
        m_axi_uart_BRESP => m_axi_uart_BRESP,
        m_axi_uart_BID => m_axi_uart_BID,
        m_axi_uart_BUSER => m_axi_uart_BUSER,
        uart_offset => uart_offset,
        value_r => grp_write_u32_fu_327_value_r);

    grp_read_u32_fu_338 : component read_u32
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_read_u32_fu_338_ap_start,
        ap_done => grp_read_u32_fu_338_ap_done,
        ap_idle => grp_read_u32_fu_338_ap_idle,
        ap_ready => grp_read_u32_fu_338_ap_ready,
        m_axi_uart_AWVALID => grp_read_u32_fu_338_m_axi_uart_AWVALID,
        m_axi_uart_AWREADY => ap_const_logic_0,
        m_axi_uart_AWADDR => grp_read_u32_fu_338_m_axi_uart_AWADDR,
        m_axi_uart_AWID => grp_read_u32_fu_338_m_axi_uart_AWID,
        m_axi_uart_AWLEN => grp_read_u32_fu_338_m_axi_uart_AWLEN,
        m_axi_uart_AWSIZE => grp_read_u32_fu_338_m_axi_uart_AWSIZE,
        m_axi_uart_AWBURST => grp_read_u32_fu_338_m_axi_uart_AWBURST,
        m_axi_uart_AWLOCK => grp_read_u32_fu_338_m_axi_uart_AWLOCK,
        m_axi_uart_AWCACHE => grp_read_u32_fu_338_m_axi_uart_AWCACHE,
        m_axi_uart_AWPROT => grp_read_u32_fu_338_m_axi_uart_AWPROT,
        m_axi_uart_AWQOS => grp_read_u32_fu_338_m_axi_uart_AWQOS,
        m_axi_uart_AWREGION => grp_read_u32_fu_338_m_axi_uart_AWREGION,
        m_axi_uart_AWUSER => grp_read_u32_fu_338_m_axi_uart_AWUSER,
        m_axi_uart_WVALID => grp_read_u32_fu_338_m_axi_uart_WVALID,
        m_axi_uart_WREADY => ap_const_logic_0,
        m_axi_uart_WDATA => grp_read_u32_fu_338_m_axi_uart_WDATA,
        m_axi_uart_WSTRB => grp_read_u32_fu_338_m_axi_uart_WSTRB,
        m_axi_uart_WLAST => grp_read_u32_fu_338_m_axi_uart_WLAST,
        m_axi_uart_WID => grp_read_u32_fu_338_m_axi_uart_WID,
        m_axi_uart_WUSER => grp_read_u32_fu_338_m_axi_uart_WUSER,
        m_axi_uart_ARVALID => grp_read_u32_fu_338_m_axi_uart_ARVALID,
        m_axi_uart_ARREADY => m_axi_uart_ARREADY,
        m_axi_uart_ARADDR => grp_read_u32_fu_338_m_axi_uart_ARADDR,
        m_axi_uart_ARID => grp_read_u32_fu_338_m_axi_uart_ARID,
        m_axi_uart_ARLEN => grp_read_u32_fu_338_m_axi_uart_ARLEN,
        m_axi_uart_ARSIZE => grp_read_u32_fu_338_m_axi_uart_ARSIZE,
        m_axi_uart_ARBURST => grp_read_u32_fu_338_m_axi_uart_ARBURST,
        m_axi_uart_ARLOCK => grp_read_u32_fu_338_m_axi_uart_ARLOCK,
        m_axi_uart_ARCACHE => grp_read_u32_fu_338_m_axi_uart_ARCACHE,
        m_axi_uart_ARPROT => grp_read_u32_fu_338_m_axi_uart_ARPROT,
        m_axi_uart_ARQOS => grp_read_u32_fu_338_m_axi_uart_ARQOS,
        m_axi_uart_ARREGION => grp_read_u32_fu_338_m_axi_uart_ARREGION,
        m_axi_uart_ARUSER => grp_read_u32_fu_338_m_axi_uart_ARUSER,
        m_axi_uart_RVALID => m_axi_uart_RVALID,
        m_axi_uart_RREADY => grp_read_u32_fu_338_m_axi_uart_RREADY,
        m_axi_uart_RDATA => m_axi_uart_RDATA,
        m_axi_uart_RLAST => m_axi_uart_RLAST,
        m_axi_uart_RID => m_axi_uart_RID,
        m_axi_uart_RUSER => m_axi_uart_RUSER,
        m_axi_uart_RRESP => m_axi_uart_RRESP,
        m_axi_uart_BVALID => ap_const_logic_0,
        m_axi_uart_BREADY => grp_read_u32_fu_338_m_axi_uart_BREADY,
        m_axi_uart_BRESP => ap_const_lv2_0,
        m_axi_uart_BID => ap_const_lv1_0,
        m_axi_uart_BUSER => ap_const_lv1_0,
        uart_offset => uart_offset,
        ap_return => grp_read_u32_fu_338_ap_return);

    grp_read_u8_fu_346 : component read_u8
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_read_u8_fu_346_ap_start,
        ap_done => grp_read_u8_fu_346_ap_done,
        ap_idle => grp_read_u8_fu_346_ap_idle,
        ap_ready => grp_read_u8_fu_346_ap_ready,
        m_axi_uart_AWVALID => grp_read_u8_fu_346_m_axi_uart_AWVALID,
        m_axi_uart_AWREADY => ap_const_logic_0,
        m_axi_uart_AWADDR => grp_read_u8_fu_346_m_axi_uart_AWADDR,
        m_axi_uart_AWID => grp_read_u8_fu_346_m_axi_uart_AWID,
        m_axi_uart_AWLEN => grp_read_u8_fu_346_m_axi_uart_AWLEN,
        m_axi_uart_AWSIZE => grp_read_u8_fu_346_m_axi_uart_AWSIZE,
        m_axi_uart_AWBURST => grp_read_u8_fu_346_m_axi_uart_AWBURST,
        m_axi_uart_AWLOCK => grp_read_u8_fu_346_m_axi_uart_AWLOCK,
        m_axi_uart_AWCACHE => grp_read_u8_fu_346_m_axi_uart_AWCACHE,
        m_axi_uart_AWPROT => grp_read_u8_fu_346_m_axi_uart_AWPROT,
        m_axi_uart_AWQOS => grp_read_u8_fu_346_m_axi_uart_AWQOS,
        m_axi_uart_AWREGION => grp_read_u8_fu_346_m_axi_uart_AWREGION,
        m_axi_uart_AWUSER => grp_read_u8_fu_346_m_axi_uart_AWUSER,
        m_axi_uart_WVALID => grp_read_u8_fu_346_m_axi_uart_WVALID,
        m_axi_uart_WREADY => ap_const_logic_0,
        m_axi_uart_WDATA => grp_read_u8_fu_346_m_axi_uart_WDATA,
        m_axi_uart_WSTRB => grp_read_u8_fu_346_m_axi_uart_WSTRB,
        m_axi_uart_WLAST => grp_read_u8_fu_346_m_axi_uart_WLAST,
        m_axi_uart_WID => grp_read_u8_fu_346_m_axi_uart_WID,
        m_axi_uart_WUSER => grp_read_u8_fu_346_m_axi_uart_WUSER,
        m_axi_uart_ARVALID => grp_read_u8_fu_346_m_axi_uart_ARVALID,
        m_axi_uart_ARREADY => m_axi_uart_ARREADY,
        m_axi_uart_ARADDR => grp_read_u8_fu_346_m_axi_uart_ARADDR,
        m_axi_uart_ARID => grp_read_u8_fu_346_m_axi_uart_ARID,
        m_axi_uart_ARLEN => grp_read_u8_fu_346_m_axi_uart_ARLEN,
        m_axi_uart_ARSIZE => grp_read_u8_fu_346_m_axi_uart_ARSIZE,
        m_axi_uart_ARBURST => grp_read_u8_fu_346_m_axi_uart_ARBURST,
        m_axi_uart_ARLOCK => grp_read_u8_fu_346_m_axi_uart_ARLOCK,
        m_axi_uart_ARCACHE => grp_read_u8_fu_346_m_axi_uart_ARCACHE,
        m_axi_uart_ARPROT => grp_read_u8_fu_346_m_axi_uart_ARPROT,
        m_axi_uart_ARQOS => grp_read_u8_fu_346_m_axi_uart_ARQOS,
        m_axi_uart_ARREGION => grp_read_u8_fu_346_m_axi_uart_ARREGION,
        m_axi_uart_ARUSER => grp_read_u8_fu_346_m_axi_uart_ARUSER,
        m_axi_uart_RVALID => m_axi_uart_RVALID,
        m_axi_uart_RREADY => grp_read_u8_fu_346_m_axi_uart_RREADY,
        m_axi_uart_RDATA => m_axi_uart_RDATA,
        m_axi_uart_RLAST => m_axi_uart_RLAST,
        m_axi_uart_RID => m_axi_uart_RID,
        m_axi_uart_RUSER => m_axi_uart_RUSER,
        m_axi_uart_RRESP => m_axi_uart_RRESP,
        m_axi_uart_BVALID => ap_const_logic_0,
        m_axi_uart_BREADY => grp_read_u8_fu_346_m_axi_uart_BREADY,
        m_axi_uart_BRESP => ap_const_lv2_0,
        m_axi_uart_BID => ap_const_lv1_0,
        m_axi_uart_BUSER => ap_const_lv1_0,
        uart_offset => uart_offset,
        ap_return => grp_read_u8_fu_346_ap_return);

    grp_write_u8_fu_353 : component write_u8
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_write_u8_fu_353_ap_start,
        ap_done => grp_write_u8_fu_353_ap_done,
        ap_idle => grp_write_u8_fu_353_ap_idle,
        ap_ready => grp_write_u8_fu_353_ap_ready,
        m_axi_uart_AWVALID => grp_write_u8_fu_353_m_axi_uart_AWVALID,
        m_axi_uart_AWREADY => m_axi_uart_AWREADY,
        m_axi_uart_AWADDR => grp_write_u8_fu_353_m_axi_uart_AWADDR,
        m_axi_uart_AWID => grp_write_u8_fu_353_m_axi_uart_AWID,
        m_axi_uart_AWLEN => grp_write_u8_fu_353_m_axi_uart_AWLEN,
        m_axi_uart_AWSIZE => grp_write_u8_fu_353_m_axi_uart_AWSIZE,
        m_axi_uart_AWBURST => grp_write_u8_fu_353_m_axi_uart_AWBURST,
        m_axi_uart_AWLOCK => grp_write_u8_fu_353_m_axi_uart_AWLOCK,
        m_axi_uart_AWCACHE => grp_write_u8_fu_353_m_axi_uart_AWCACHE,
        m_axi_uart_AWPROT => grp_write_u8_fu_353_m_axi_uart_AWPROT,
        m_axi_uart_AWQOS => grp_write_u8_fu_353_m_axi_uart_AWQOS,
        m_axi_uart_AWREGION => grp_write_u8_fu_353_m_axi_uart_AWREGION,
        m_axi_uart_AWUSER => grp_write_u8_fu_353_m_axi_uart_AWUSER,
        m_axi_uart_WVALID => grp_write_u8_fu_353_m_axi_uart_WVALID,
        m_axi_uart_WREADY => m_axi_uart_WREADY,
        m_axi_uart_WDATA => grp_write_u8_fu_353_m_axi_uart_WDATA,
        m_axi_uart_WSTRB => grp_write_u8_fu_353_m_axi_uart_WSTRB,
        m_axi_uart_WLAST => grp_write_u8_fu_353_m_axi_uart_WLAST,
        m_axi_uart_WID => grp_write_u8_fu_353_m_axi_uart_WID,
        m_axi_uart_WUSER => grp_write_u8_fu_353_m_axi_uart_WUSER,
        m_axi_uart_ARVALID => grp_write_u8_fu_353_m_axi_uart_ARVALID,
        m_axi_uart_ARREADY => m_axi_uart_ARREADY,
        m_axi_uart_ARADDR => grp_write_u8_fu_353_m_axi_uart_ARADDR,
        m_axi_uart_ARID => grp_write_u8_fu_353_m_axi_uart_ARID,
        m_axi_uart_ARLEN => grp_write_u8_fu_353_m_axi_uart_ARLEN,
        m_axi_uart_ARSIZE => grp_write_u8_fu_353_m_axi_uart_ARSIZE,
        m_axi_uart_ARBURST => grp_write_u8_fu_353_m_axi_uart_ARBURST,
        m_axi_uart_ARLOCK => grp_write_u8_fu_353_m_axi_uart_ARLOCK,
        m_axi_uart_ARCACHE => grp_write_u8_fu_353_m_axi_uart_ARCACHE,
        m_axi_uart_ARPROT => grp_write_u8_fu_353_m_axi_uart_ARPROT,
        m_axi_uart_ARQOS => grp_write_u8_fu_353_m_axi_uart_ARQOS,
        m_axi_uart_ARREGION => grp_write_u8_fu_353_m_axi_uart_ARREGION,
        m_axi_uart_ARUSER => grp_write_u8_fu_353_m_axi_uart_ARUSER,
        m_axi_uart_RVALID => m_axi_uart_RVALID,
        m_axi_uart_RREADY => grp_write_u8_fu_353_m_axi_uart_RREADY,
        m_axi_uart_RDATA => m_axi_uart_RDATA,
        m_axi_uart_RLAST => m_axi_uart_RLAST,
        m_axi_uart_RID => m_axi_uart_RID,
        m_axi_uart_RUSER => m_axi_uart_RUSER,
        m_axi_uart_RRESP => m_axi_uart_RRESP,
        m_axi_uart_BVALID => m_axi_uart_BVALID,
        m_axi_uart_BREADY => grp_write_u8_fu_353_m_axi_uart_BREADY,
        m_axi_uart_BRESP => m_axi_uart_BRESP,
        m_axi_uart_BID => m_axi_uart_BID,
        m_axi_uart_BUSER => m_axi_uart_BUSER,
        uart_offset => uart_offset,
        value_r => select_ln101_2_reg_1262);

    grp_remove_hw_bkpt_fu_361 : component remove_hw_bkpt
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_remove_hw_bkpt_fu_361_ap_start,
        ap_done => grp_remove_hw_bkpt_fu_361_ap_done,
        ap_idle => grp_remove_hw_bkpt_fu_361_ap_idle,
        ap_ready => grp_remove_hw_bkpt_fu_361_ap_ready,
        addr => reg_402,
        hbkpt_active_address0 => grp_remove_hw_bkpt_fu_361_hbkpt_active_address0,
        hbkpt_active_ce0 => grp_remove_hw_bkpt_fu_361_hbkpt_active_ce0,
        hbkpt_active_we0 => grp_remove_hw_bkpt_fu_361_hbkpt_active_we0,
        hbkpt_active_d0 => grp_remove_hw_bkpt_fu_361_hbkpt_active_d0,
        hbkpt_active_q0 => hbkpt_active_q0,
        hbkpt_target_address0 => grp_remove_hw_bkpt_fu_361_hbkpt_target_address0,
        hbkpt_target_ce0 => grp_remove_hw_bkpt_fu_361_hbkpt_target_ce0,
        hbkpt_target_q0 => hbkpt_target_q0);

    grp_read_byte_fu_371 : component read_byte
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_read_byte_fu_371_ap_start,
        ap_done => grp_read_byte_fu_371_ap_done,
        ap_idle => grp_read_byte_fu_371_ap_idle,
        ap_ready => grp_read_byte_fu_371_ap_ready,
        m_axi_uart_AWVALID => grp_read_byte_fu_371_m_axi_uart_AWVALID,
        m_axi_uart_AWREADY => ap_const_logic_0,
        m_axi_uart_AWADDR => grp_read_byte_fu_371_m_axi_uart_AWADDR,
        m_axi_uart_AWID => grp_read_byte_fu_371_m_axi_uart_AWID,
        m_axi_uart_AWLEN => grp_read_byte_fu_371_m_axi_uart_AWLEN,
        m_axi_uart_AWSIZE => grp_read_byte_fu_371_m_axi_uart_AWSIZE,
        m_axi_uart_AWBURST => grp_read_byte_fu_371_m_axi_uart_AWBURST,
        m_axi_uart_AWLOCK => grp_read_byte_fu_371_m_axi_uart_AWLOCK,
        m_axi_uart_AWCACHE => grp_read_byte_fu_371_m_axi_uart_AWCACHE,
        m_axi_uart_AWPROT => grp_read_byte_fu_371_m_axi_uart_AWPROT,
        m_axi_uart_AWQOS => grp_read_byte_fu_371_m_axi_uart_AWQOS,
        m_axi_uart_AWREGION => grp_read_byte_fu_371_m_axi_uart_AWREGION,
        m_axi_uart_AWUSER => grp_read_byte_fu_371_m_axi_uart_AWUSER,
        m_axi_uart_WVALID => grp_read_byte_fu_371_m_axi_uart_WVALID,
        m_axi_uart_WREADY => ap_const_logic_0,
        m_axi_uart_WDATA => grp_read_byte_fu_371_m_axi_uart_WDATA,
        m_axi_uart_WSTRB => grp_read_byte_fu_371_m_axi_uart_WSTRB,
        m_axi_uart_WLAST => grp_read_byte_fu_371_m_axi_uart_WLAST,
        m_axi_uart_WID => grp_read_byte_fu_371_m_axi_uart_WID,
        m_axi_uart_WUSER => grp_read_byte_fu_371_m_axi_uart_WUSER,
        m_axi_uart_ARVALID => grp_read_byte_fu_371_m_axi_uart_ARVALID,
        m_axi_uart_ARREADY => m_axi_uart_ARREADY,
        m_axi_uart_ARADDR => grp_read_byte_fu_371_m_axi_uart_ARADDR,
        m_axi_uart_ARID => grp_read_byte_fu_371_m_axi_uart_ARID,
        m_axi_uart_ARLEN => grp_read_byte_fu_371_m_axi_uart_ARLEN,
        m_axi_uart_ARSIZE => grp_read_byte_fu_371_m_axi_uart_ARSIZE,
        m_axi_uart_ARBURST => grp_read_byte_fu_371_m_axi_uart_ARBURST,
        m_axi_uart_ARLOCK => grp_read_byte_fu_371_m_axi_uart_ARLOCK,
        m_axi_uart_ARCACHE => grp_read_byte_fu_371_m_axi_uart_ARCACHE,
        m_axi_uart_ARPROT => grp_read_byte_fu_371_m_axi_uart_ARPROT,
        m_axi_uart_ARQOS => grp_read_byte_fu_371_m_axi_uart_ARQOS,
        m_axi_uart_ARREGION => grp_read_byte_fu_371_m_axi_uart_ARREGION,
        m_axi_uart_ARUSER => grp_read_byte_fu_371_m_axi_uart_ARUSER,
        m_axi_uart_RVALID => m_axi_uart_RVALID,
        m_axi_uart_RREADY => grp_read_byte_fu_371_m_axi_uart_RREADY,
        m_axi_uart_RDATA => m_axi_uart_RDATA,
        m_axi_uart_RLAST => m_axi_uart_RLAST,
        m_axi_uart_RID => m_axi_uart_RID,
        m_axi_uart_RUSER => m_axi_uart_RUSER,
        m_axi_uart_RRESP => m_axi_uart_RRESP,
        m_axi_uart_BVALID => ap_const_logic_0,
        m_axi_uart_BREADY => grp_read_byte_fu_371_m_axi_uart_BREADY,
        m_axi_uart_BRESP => ap_const_lv2_0,
        m_axi_uart_BID => ap_const_lv1_0,
        m_axi_uart_BUSER => ap_const_lv1_0,
        uart_offset => uart_offset,
        ap_return => grp_read_byte_fu_371_ap_return);

    uart_master_mux_2ibs_U36 : component uart_master_mux_2ibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 32,
        din33_WIDTH => 32,
        din34_WIDTH => 32,
        din35_WIDTH => 32,
        din36_WIDTH => 32,
        din37_WIDTH => 32,
        din38_WIDTH => 32,
        din39_WIDTH => 32,
        din40_WIDTH => 32,
        din41_WIDTH => 32,
        din42_WIDTH => 32,
        din43_WIDTH => 32,
        din44_WIDTH => 32,
        din45_WIDTH => 32,
        din46_WIDTH => 32,
        din47_WIDTH => 32,
        din48_WIDTH => 32,
        din49_WIDTH => 32,
        din50_WIDTH => 32,
        din51_WIDTH => 32,
        din52_WIDTH => 32,
        din53_WIDTH => 32,
        din54_WIDTH => 32,
        din55_WIDTH => 32,
        din56_WIDTH => 32,
        din57_WIDTH => 32,
        din58_WIDTH => 32,
        din59_WIDTH => 32,
        din60_WIDTH => 32,
        din61_WIDTH => 32,
        din62_WIDTH => 32,
        din63_WIDTH => 32,
        din64_WIDTH => 32,
        din65_WIDTH => 32,
        din66_WIDTH => 32,
        din67_WIDTH => 32,
        din68_WIDTH => 32,
        din69_WIDTH => 32,
        din70_WIDTH => 32,
        din71_WIDTH => 32,
        din72_WIDTH => 32,
        din73_WIDTH => 32,
        din74_WIDTH => 32,
        din75_WIDTH => 32,
        din76_WIDTH => 32,
        din77_WIDTH => 32,
        din78_WIDTH => 32,
        din79_WIDTH => 32,
        din80_WIDTH => 32,
        din81_WIDTH => 32,
        din82_WIDTH => 32,
        din83_WIDTH => 32,
        din84_WIDTH => 32,
        din85_WIDTH => 32,
        din86_WIDTH => 32,
        din87_WIDTH => 32,
        din88_WIDTH => 32,
        din89_WIDTH => 32,
        din90_WIDTH => 32,
        din91_WIDTH => 32,
        din92_WIDTH => 32,
        din93_WIDTH => 32,
        din94_WIDTH => 32,
        din95_WIDTH => 32,
        din96_WIDTH => 32,
        din97_WIDTH => 32,
        din98_WIDTH => 32,
        din99_WIDTH => 32,
        din100_WIDTH => 32,
        din101_WIDTH => 32,
        din102_WIDTH => 32,
        din103_WIDTH => 32,
        din104_WIDTH => 32,
        din105_WIDTH => 32,
        din106_WIDTH => 32,
        din107_WIDTH => 32,
        din108_WIDTH => 32,
        din109_WIDTH => 32,
        din110_WIDTH => 32,
        din111_WIDTH => 32,
        din112_WIDTH => 32,
        din113_WIDTH => 32,
        din114_WIDTH => 32,
        din115_WIDTH => 32,
        din116_WIDTH => 32,
        din117_WIDTH => 32,
        din118_WIDTH => 32,
        din119_WIDTH => 32,
        din120_WIDTH => 32,
        din121_WIDTH => 32,
        din122_WIDTH => 32,
        din123_WIDTH => 32,
        din124_WIDTH => 32,
        din125_WIDTH => 32,
        din126_WIDTH => 32,
        din127_WIDTH => 32,
        din128_WIDTH => 32,
        din129_WIDTH => 32,
        din130_WIDTH => 32,
        din131_WIDTH => 32,
        din132_WIDTH => 32,
        din133_WIDTH => 32,
        din134_WIDTH => 32,
        din135_WIDTH => 32,
        din136_WIDTH => 32,
        din137_WIDTH => 32,
        din138_WIDTH => 32,
        din139_WIDTH => 32,
        din140_WIDTH => 32,
        din141_WIDTH => 32,
        din142_WIDTH => 32,
        din143_WIDTH => 32,
        din144_WIDTH => 32,
        din145_WIDTH => 32,
        din146_WIDTH => 32,
        din147_WIDTH => 32,
        din148_WIDTH => 32,
        din149_WIDTH => 32,
        din150_WIDTH => 32,
        din151_WIDTH => 32,
        din152_WIDTH => 32,
        din153_WIDTH => 32,
        din154_WIDTH => 32,
        din155_WIDTH => 32,
        din156_WIDTH => 32,
        din157_WIDTH => 32,
        din158_WIDTH => 32,
        din159_WIDTH => 32,
        din160_WIDTH => 32,
        din161_WIDTH => 32,
        din162_WIDTH => 32,
        din163_WIDTH => 32,
        din164_WIDTH => 32,
        din165_WIDTH => 32,
        din166_WIDTH => 32,
        din167_WIDTH => 32,
        din168_WIDTH => 32,
        din169_WIDTH => 32,
        din170_WIDTH => 32,
        din171_WIDTH => 32,
        din172_WIDTH => 32,
        din173_WIDTH => 32,
        din174_WIDTH => 32,
        din175_WIDTH => 32,
        din176_WIDTH => 32,
        din177_WIDTH => 32,
        din178_WIDTH => 32,
        din179_WIDTH => 32,
        din180_WIDTH => 32,
        din181_WIDTH => 32,
        din182_WIDTH => 32,
        din183_WIDTH => 32,
        din184_WIDTH => 32,
        din185_WIDTH => 32,
        din186_WIDTH => 32,
        din187_WIDTH => 32,
        din188_WIDTH => 32,
        din189_WIDTH => 32,
        din190_WIDTH => 32,
        din191_WIDTH => 32,
        din192_WIDTH => 32,
        din193_WIDTH => 32,
        din194_WIDTH => 32,
        din195_WIDTH => 32,
        din196_WIDTH => 32,
        din197_WIDTH => 32,
        din198_WIDTH => 32,
        din199_WIDTH => 32,
        din200_WIDTH => 32,
        din201_WIDTH => 32,
        din202_WIDTH => 32,
        din203_WIDTH => 32,
        din204_WIDTH => 32,
        din205_WIDTH => 32,
        din206_WIDTH => 32,
        din207_WIDTH => 32,
        din208_WIDTH => 32,
        din209_WIDTH => 32,
        din210_WIDTH => 32,
        din211_WIDTH => 32,
        din212_WIDTH => 32,
        din213_WIDTH => 32,
        din214_WIDTH => 32,
        din215_WIDTH => 32,
        din216_WIDTH => 32,
        din217_WIDTH => 32,
        din218_WIDTH => 32,
        din219_WIDTH => 32,
        din220_WIDTH => 32,
        din221_WIDTH => 32,
        din222_WIDTH => 32,
        din223_WIDTH => 32,
        din224_WIDTH => 32,
        din225_WIDTH => 32,
        din226_WIDTH => 32,
        din227_WIDTH => 32,
        din228_WIDTH => 32,
        din229_WIDTH => 32,
        din230_WIDTH => 32,
        din231_WIDTH => 32,
        din232_WIDTH => 32,
        din233_WIDTH => 32,
        din234_WIDTH => 32,
        din235_WIDTH => 32,
        din236_WIDTH => 32,
        din237_WIDTH => 32,
        din238_WIDTH => 32,
        din239_WIDTH => 32,
        din240_WIDTH => 32,
        din241_WIDTH => 32,
        din242_WIDTH => 32,
        din243_WIDTH => 32,
        din244_WIDTH => 32,
        din245_WIDTH => 32,
        din246_WIDTH => 32,
        din247_WIDTH => 32,
        din248_WIDTH => 32,
        din249_WIDTH => 32,
        din250_WIDTH => 32,
        din251_WIDTH => 32,
        din252_WIDTH => 32,
        din253_WIDTH => 32,
        din254_WIDTH => 32,
        din255_WIDTH => 32,
        din256_WIDTH => 8,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_DEADBEEF,
        din1 => ap_const_lv32_CAFE00,
        din2 => ap_const_lv32_100,
        din3 => ap_const_lv32_DEADBEEF,
        din4 => ap_const_lv32_DEADBEEF,
        din5 => ap_const_lv32_DEADBEEF,
        din6 => ap_const_lv32_DEADBEEF,
        din7 => ap_const_lv32_DEADBEEF,
        din8 => ap_const_lv32_DEADBEEF,
        din9 => ap_const_lv32_DEADBEEF,
        din10 => ap_const_lv32_DEADBEEF,
        din11 => ap_const_lv32_DEADBEEF,
        din12 => ap_const_lv32_DEADBEEF,
        din13 => ap_const_lv32_DEADBEEF,
        din14 => ap_const_lv32_DEADBEEF,
        din15 => ap_const_lv32_DEADBEEF,
        din16 => ap_const_lv32_DEADBEEF,
        din17 => ap_const_lv32_DEADBEEF,
        din18 => ap_const_lv32_DEADBEEF,
        din19 => ap_const_lv32_DEADBEEF,
        din20 => ap_const_lv32_DEADBEEF,
        din21 => ap_const_lv32_DEADBEEF,
        din22 => ap_const_lv32_DEADBEEF,
        din23 => ap_const_lv32_DEADBEEF,
        din24 => ap_const_lv32_DEADBEEF,
        din25 => ap_const_lv32_DEADBEEF,
        din26 => ap_const_lv32_DEADBEEF,
        din27 => ap_const_lv32_DEADBEEF,
        din28 => ap_const_lv32_DEADBEEF,
        din29 => ap_const_lv32_DEADBEEF,
        din30 => ap_const_lv32_DEADBEEF,
        din31 => ap_const_lv32_DEADBEEF,
        din32 => ap_const_lv32_DEADBEEF,
        din33 => ap_const_lv32_DEADBEEF,
        din34 => ap_const_lv32_DEADBEEF,
        din35 => ap_const_lv32_DEADBEEF,
        din36 => ap_const_lv32_DEADBEEF,
        din37 => ap_const_lv32_DEADBEEF,
        din38 => ap_const_lv32_DEADBEEF,
        din39 => ap_const_lv32_DEADBEEF,
        din40 => ap_const_lv32_DEADBEEF,
        din41 => ap_const_lv32_DEADBEEF,
        din42 => ap_const_lv32_DEADBEEF,
        din43 => ap_const_lv32_DEADBEEF,
        din44 => ap_const_lv32_DEADBEEF,
        din45 => ap_const_lv32_DEADBEEF,
        din46 => ap_const_lv32_DEADBEEF,
        din47 => ap_const_lv32_DEADBEEF,
        din48 => ap_const_lv32_DEADBEEF,
        din49 => ap_const_lv32_DEADBEEF,
        din50 => ap_const_lv32_DEADBEEF,
        din51 => ap_const_lv32_DEADBEEF,
        din52 => ap_const_lv32_DEADBEEF,
        din53 => ap_const_lv32_DEADBEEF,
        din54 => ap_const_lv32_DEADBEEF,
        din55 => ap_const_lv32_DEADBEEF,
        din56 => ap_const_lv32_DEADBEEF,
        din57 => ap_const_lv32_DEADBEEF,
        din58 => ap_const_lv32_DEADBEEF,
        din59 => ap_const_lv32_DEADBEEF,
        din60 => ap_const_lv32_DEADBEEF,
        din61 => ap_const_lv32_DEADBEEF,
        din62 => ap_const_lv32_DEADBEEF,
        din63 => ap_const_lv32_DEADBEEF,
        din64 => ap_const_lv32_DEADBEEF,
        din65 => ap_const_lv32_DEADBEEF,
        din66 => ap_const_lv32_DEADBEEF,
        din67 => ap_const_lv32_DEADBEEF,
        din68 => ap_const_lv32_DEADBEEF,
        din69 => ap_const_lv32_DEADBEEF,
        din70 => ap_const_lv32_DEADBEEF,
        din71 => ap_const_lv32_DEADBEEF,
        din72 => ap_const_lv32_DEADBEEF,
        din73 => ap_const_lv32_DEADBEEF,
        din74 => ap_const_lv32_DEADBEEF,
        din75 => ap_const_lv32_DEADBEEF,
        din76 => ap_const_lv32_DEADBEEF,
        din77 => ap_const_lv32_DEADBEEF,
        din78 => ap_const_lv32_DEADBEEF,
        din79 => ap_const_lv32_DEADBEEF,
        din80 => ap_const_lv32_DEADBEEF,
        din81 => ap_const_lv32_DEADBEEF,
        din82 => ap_const_lv32_DEADBEEF,
        din83 => ap_const_lv32_DEADBEEF,
        din84 => ap_const_lv32_DEADBEEF,
        din85 => ap_const_lv32_DEADBEEF,
        din86 => ap_const_lv32_DEADBEEF,
        din87 => ap_const_lv32_DEADBEEF,
        din88 => ap_const_lv32_DEADBEEF,
        din89 => ap_const_lv32_DEADBEEF,
        din90 => ap_const_lv32_DEADBEEF,
        din91 => ap_const_lv32_DEADBEEF,
        din92 => ap_const_lv32_DEADBEEF,
        din93 => ap_const_lv32_DEADBEEF,
        din94 => ap_const_lv32_DEADBEEF,
        din95 => ap_const_lv32_DEADBEEF,
        din96 => ap_const_lv32_DEADBEEF,
        din97 => ap_const_lv32_DEADBEEF,
        din98 => ap_const_lv32_DEADBEEF,
        din99 => ap_const_lv32_DEADBEEF,
        din100 => ap_const_lv32_DEADBEEF,
        din101 => ap_const_lv32_DEADBEEF,
        din102 => ap_const_lv32_DEADBEEF,
        din103 => ap_const_lv32_DEADBEEF,
        din104 => ap_const_lv32_DEADBEEF,
        din105 => ap_const_lv32_DEADBEEF,
        din106 => ap_const_lv32_DEADBEEF,
        din107 => ap_const_lv32_DEADBEEF,
        din108 => ap_const_lv32_DEADBEEF,
        din109 => ap_const_lv32_DEADBEEF,
        din110 => ap_const_lv32_DEADBEEF,
        din111 => ap_const_lv32_DEADBEEF,
        din112 => ap_const_lv32_DEADBEEF,
        din113 => ap_const_lv32_DEADBEEF,
        din114 => ap_const_lv32_DEADBEEF,
        din115 => ap_const_lv32_DEADBEEF,
        din116 => ap_const_lv32_DEADBEEF,
        din117 => ap_const_lv32_DEADBEEF,
        din118 => ap_const_lv32_DEADBEEF,
        din119 => ap_const_lv32_DEADBEEF,
        din120 => ap_const_lv32_DEADBEEF,
        din121 => ap_const_lv32_DEADBEEF,
        din122 => ap_const_lv32_DEADBEEF,
        din123 => ap_const_lv32_DEADBEEF,
        din124 => ap_const_lv32_DEADBEEF,
        din125 => ap_const_lv32_DEADBEEF,
        din126 => ap_const_lv32_DEADBEEF,
        din127 => ap_const_lv32_DEADBEEF,
        din128 => ap_const_lv32_DEADBEEF,
        din129 => ap_const_lv32_DEADBEEF,
        din130 => ap_const_lv32_DEADBEEF,
        din131 => ap_const_lv32_DEADBEEF,
        din132 => ap_const_lv32_DEADBEEF,
        din133 => ap_const_lv32_DEADBEEF,
        din134 => ap_const_lv32_DEADBEEF,
        din135 => ap_const_lv32_DEADBEEF,
        din136 => ap_const_lv32_DEADBEEF,
        din137 => ap_const_lv32_DEADBEEF,
        din138 => ap_const_lv32_DEADBEEF,
        din139 => ap_const_lv32_DEADBEEF,
        din140 => ap_const_lv32_DEADBEEF,
        din141 => ap_const_lv32_DEADBEEF,
        din142 => ap_const_lv32_DEADBEEF,
        din143 => ap_const_lv32_DEADBEEF,
        din144 => ap_const_lv32_DEADBEEF,
        din145 => ap_const_lv32_DEADBEEF,
        din146 => ap_const_lv32_DEADBEEF,
        din147 => ap_const_lv32_DEADBEEF,
        din148 => ap_const_lv32_DEADBEEF,
        din149 => ap_const_lv32_DEADBEEF,
        din150 => ap_const_lv32_DEADBEEF,
        din151 => ap_const_lv32_DEADBEEF,
        din152 => ap_const_lv32_DEADBEEF,
        din153 => ap_const_lv32_DEADBEEF,
        din154 => ap_const_lv32_DEADBEEF,
        din155 => ap_const_lv32_DEADBEEF,
        din156 => ap_const_lv32_DEADBEEF,
        din157 => ap_const_lv32_DEADBEEF,
        din158 => ap_const_lv32_DEADBEEF,
        din159 => ap_const_lv32_DEADBEEF,
        din160 => ap_const_lv32_DEADBEEF,
        din161 => ap_const_lv32_DEADBEEF,
        din162 => ap_const_lv32_DEADBEEF,
        din163 => ap_const_lv32_DEADBEEF,
        din164 => ap_const_lv32_DEADBEEF,
        din165 => ap_const_lv32_DEADBEEF,
        din166 => ap_const_lv32_DEADBEEF,
        din167 => ap_const_lv32_DEADBEEF,
        din168 => ap_const_lv32_DEADBEEF,
        din169 => ap_const_lv32_DEADBEEF,
        din170 => ap_const_lv32_DEADBEEF,
        din171 => ap_const_lv32_DEADBEEF,
        din172 => ap_const_lv32_DEADBEEF,
        din173 => ap_const_lv32_DEADBEEF,
        din174 => ap_const_lv32_DEADBEEF,
        din175 => ap_const_lv32_DEADBEEF,
        din176 => ap_const_lv32_DEADBEEF,
        din177 => ap_const_lv32_DEADBEEF,
        din178 => ap_const_lv32_DEADBEEF,
        din179 => ap_const_lv32_DEADBEEF,
        din180 => ap_const_lv32_DEADBEEF,
        din181 => ap_const_lv32_DEADBEEF,
        din182 => ap_const_lv32_DEADBEEF,
        din183 => ap_const_lv32_DEADBEEF,
        din184 => ap_const_lv32_DEADBEEF,
        din185 => ap_const_lv32_DEADBEEF,
        din186 => ap_const_lv32_DEADBEEF,
        din187 => ap_const_lv32_DEADBEEF,
        din188 => ap_const_lv32_DEADBEEF,
        din189 => ap_const_lv32_DEADBEEF,
        din190 => ap_const_lv32_DEADBEEF,
        din191 => ap_const_lv32_DEADBEEF,
        din192 => ap_const_lv32_DEADBEEF,
        din193 => ap_const_lv32_DEADBEEF,
        din194 => ap_const_lv32_DEADBEEF,
        din195 => ap_const_lv32_DEADBEEF,
        din196 => ap_const_lv32_DEADBEEF,
        din197 => ap_const_lv32_DEADBEEF,
        din198 => ap_const_lv32_DEADBEEF,
        din199 => ap_const_lv32_DEADBEEF,
        din200 => ap_const_lv32_DEADBEEF,
        din201 => ap_const_lv32_DEADBEEF,
        din202 => ap_const_lv32_DEADBEEF,
        din203 => ap_const_lv32_DEADBEEF,
        din204 => ap_const_lv32_DEADBEEF,
        din205 => ap_const_lv32_DEADBEEF,
        din206 => ap_const_lv32_DEADBEEF,
        din207 => ap_const_lv32_DEADBEEF,
        din208 => ap_const_lv32_DEADBEEF,
        din209 => ap_const_lv32_DEADBEEF,
        din210 => ap_const_lv32_DEADBEEF,
        din211 => ap_const_lv32_DEADBEEF,
        din212 => ap_const_lv32_DEADBEEF,
        din213 => ap_const_lv32_DEADBEEF,
        din214 => ap_const_lv32_DEADBEEF,
        din215 => ap_const_lv32_DEADBEEF,
        din216 => ap_const_lv32_DEADBEEF,
        din217 => ap_const_lv32_DEADBEEF,
        din218 => ap_const_lv32_DEADBEEF,
        din219 => ap_const_lv32_DEADBEEF,
        din220 => ap_const_lv32_DEADBEEF,
        din221 => ap_const_lv32_DEADBEEF,
        din222 => ap_const_lv32_DEADBEEF,
        din223 => ap_const_lv32_DEADBEEF,
        din224 => ap_const_lv32_DEADBEEF,
        din225 => ap_const_lv32_DEADBEEF,
        din226 => ap_const_lv32_DEADBEEF,
        din227 => ap_const_lv32_DEADBEEF,
        din228 => ap_const_lv32_DEADBEEF,
        din229 => ap_const_lv32_DEADBEEF,
        din230 => ap_const_lv32_DEADBEEF,
        din231 => ap_const_lv32_DEADBEEF,
        din232 => ap_const_lv32_DEADBEEF,
        din233 => ap_const_lv32_DEADBEEF,
        din234 => ap_const_lv32_DEADBEEF,
        din235 => ap_const_lv32_DEADBEEF,
        din236 => ap_const_lv32_DEADBEEF,
        din237 => ap_const_lv32_DEADBEEF,
        din238 => ap_const_lv32_DEADBEEF,
        din239 => ap_const_lv32_DEADBEEF,
        din240 => ap_const_lv32_DEADBEEF,
        din241 => ap_const_lv32_DEADBEEF,
        din242 => ap_const_lv32_DEADBEEF,
        din243 => ap_const_lv32_DEADBEEF,
        din244 => ap_const_lv32_DEADBEEF,
        din245 => ap_const_lv32_DEADBEEF,
        din246 => ap_const_lv32_DEADBEEF,
        din247 => ap_const_lv32_DEADBEEF,
        din248 => ap_const_lv32_DEADBEEF,
        din249 => ap_const_lv32_DEADBEEF,
        din250 => ap_const_lv32_DEADBEEF,
        din251 => ap_const_lv32_DEADBEEF,
        din252 => ap_const_lv32_DEADBEEF,
        din253 => ap_const_lv32_DEADBEEF,
        din254 => ap_const_lv32_DEADBEEF,
        din255 => ap_const_lv32_DEADBEEF,
        din256 => trunc_ln304_reg_1180,
        dout => p_0_i_fu_477_p258);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_cpu_step_fu_301_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_cpu_step_fu_301_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    grp_cpu_step_fu_301_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cpu_step_fu_301_ap_ready = ap_const_logic_1)) then 
                    grp_cpu_step_fu_301_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_read_byte_fu_371_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_read_byte_fu_371_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_read_byte_fu_371_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_read_byte_fu_371_ap_ready = ap_const_logic_1)) then 
                    grp_read_byte_fu_371_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_read_u32_fu_338_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_read_u32_fu_338_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state21) or ((cmd_reg_1148 = ap_const_lv32_55) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((grp_load_fu_379_p1 = ap_const_lv1_1) and (cmd_reg_1148 = ap_const_lv32_57) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_42) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
                    grp_read_u32_fu_338_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_read_u32_fu_338_ap_ready = ap_const_logic_1)) then 
                    grp_read_u32_fu_338_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_read_u8_fu_346_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_read_u8_fu_346_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state19) or ((grp_load_fu_379_p1 = ap_const_lv1_1) and (cmd_reg_1148 = ap_const_lv32_52) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
                    grp_read_u8_fu_346_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_read_u8_fu_346_ap_ready = ap_const_logic_1)) then 
                    grp_read_u8_fu_346_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_remove_hw_bkpt_fu_361_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_remove_hw_bkpt_fu_361_ap_start_reg <= ap_const_logic_0;
            else
                if (((grp_read_u32_fu_338_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                    grp_remove_hw_bkpt_fu_361_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_remove_hw_bkpt_fu_361_ap_ready = ap_const_logic_1)) then 
                    grp_remove_hw_bkpt_fu_361_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_write_u32_fu_327_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_write_u32_fu_327_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                    grp_write_u32_fu_327_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_write_u32_fu_327_ap_ready = ap_const_logic_1)) then 
                    grp_write_u32_fu_327_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_write_u8_fu_353_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_write_u8_fu_353_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
                    grp_write_u8_fu_353_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_write_u8_fu_353_ap_ready = ap_const_logic_1)) then 
                    grp_write_u8_fu_353_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    k_0_i_reg_290_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln168_reg_1190 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18) and (hbkpt_active_q0 = ap_const_lv1_1))) then 
                k_0_i_reg_290 <= k_reg_1194;
            elsif (((ap_const_boolean_0 = ap_block_state10_on_subcall_done) and (cmd_reg_1148 = ap_const_lv32_42) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                k_0_i_reg_290 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_read_byte_fu_371_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                cmd_reg_1148 <= grp_read_byte_fu_371_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((cmd_reg_1148 = ap_const_lv32_57) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                halted_load_1_reg_1167 <= halted_i;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((cmd_reg_1148 = ap_const_lv32_52) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                halted_load_2_reg_1163 <= halted_i;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((cmd_reg_1148 = ap_const_lv32_58) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                halted_load_3_reg_1159 <= halted_i;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((cmd_reg_1148 = ap_const_lv32_53) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                halted_load_4_reg_1155 <= halted_i;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((cmd_reg_1148 = ap_const_lv32_4D) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                halted_load_reg_1171 <= halted_i;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln168_fu_995_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                hbkpt_active_addr_reg_1204 <= zext_ln169_fu_1007_p1(5 - 1 downto 0);
                    zext_ln169_reg_1199(5 downto 0) <= zext_ln169_fu_1007_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                icmp_ln168_reg_1190 <= icmp_ln168_fu_995_p2;
                k_reg_1194 <= k_fu_1001_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_read_u8_fu_346_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                icmp_ln264_reg_1217 <= icmp_ln264_fu_1024_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state10_on_subcall_done) and (cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                id_reg_1175 <= grp_read_u8_fu_346_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                p_0_i_reg_1185 <= p_0_i_fu_477_p258;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state6))) then
                reg_397 <= pc_i;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_state10_on_subcall_done) and (cmd_reg_1148 = ap_const_lv32_42) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((grp_read_u32_fu_338_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27)) or ((grp_read_u32_fu_338_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then
                reg_402 <= grp_read_u32_fu_338_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state32)) then
                select_ln101_2_reg_1262 <= select_ln101_2_fu_1130_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_read_u32_fu_338_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then
                trunc_ln234_reg_1235 <= trunc_ln234_fu_1071_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_read_u32_fu_338_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                trunc_ln249_reg_1231 <= trunc_ln249_fu_1039_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_read_u8_fu_346_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                trunc_ln277_reg_1212 <= trunc_ln277_fu_1012_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state14_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                trunc_ln304_reg_1180 <= trunc_ln304_fu_474_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
                x_load_reg_1226 <= x_q0;
            end if;
        end if;
    end process;
    zext_ln169_reg_1199(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, hbkpt_active_q0, ap_CS_fsm_state8, grp_read_u32_fu_338_ap_done, ap_CS_fsm_state10, grp_read_u8_fu_346_ap_done, cmd_reg_1148, ap_block_state10_on_subcall_done, ap_CS_fsm_state27, ap_CS_fsm_state2, grp_read_byte_fu_371_ap_done, grp_load_fu_379_p1, ap_CS_fsm_state3, grp_read_u8_fu_346_ap_return, ap_CS_fsm_state14, grp_write_u32_fu_327_ap_done, ap_block_state14_on_subcall_done, icmp_ln168_reg_1190, ap_CS_fsm_state20, icmp_ln264_fu_1024_p2, ap_CS_fsm_state23, ap_CS_fsm_state31, grp_cpu_step_fu_301_ap_done, grp_remove_hw_bkpt_fu_361_ap_done, ap_CS_fsm_state18, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state25, ap_CS_fsm_state22, ap_CS_fsm_state29, ap_CS_fsm_state33, ap_CS_fsm_state9, ap_block_state22_on_subcall_done, ap_block_state29_on_subcall_done, ap_block_state16_on_subcall_done, ap_block_state7_on_subcall_done, ap_block_state25_on_subcall_done, ap_block_state33_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_read_byte_fu_371_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((grp_load_fu_379_p1 = ap_const_lv1_0) and (cmd_reg_1148 = ap_const_lv32_4D) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                elsif (((grp_load_fu_379_p1 = ap_const_lv1_1) and (cmd_reg_1148 = ap_const_lv32_4D) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                elsif (((grp_load_fu_379_p1 = ap_const_lv1_0) and (cmd_reg_1148 = ap_const_lv32_57) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                elsif (((grp_load_fu_379_p1 = ap_const_lv1_1) and (cmd_reg_1148 = ap_const_lv32_57) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                elsif (((grp_load_fu_379_p1 = ap_const_lv1_0) and (cmd_reg_1148 = ap_const_lv32_52) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                elsif (((grp_load_fu_379_p1 = ap_const_lv1_1) and (cmd_reg_1148 = ap_const_lv32_52) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                elsif (((grp_load_fu_379_p1 = ap_const_lv1_0) and (cmd_reg_1148 = ap_const_lv32_58) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                elsif (((grp_load_fu_379_p1 = ap_const_lv1_1) and (cmd_reg_1148 = ap_const_lv32_58) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                elsif (((grp_load_fu_379_p1 = ap_const_lv1_0) and (cmd_reg_1148 = ap_const_lv32_53) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                elsif (((grp_load_fu_379_p1 = ap_const_lv1_1) and (cmd_reg_1148 = ap_const_lv32_53) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                elsif ((not((cmd_reg_1148 = ap_const_lv32_55)) and not((cmd_reg_1148 = ap_const_lv32_4D)) and not((cmd_reg_1148 = ap_const_lv32_57)) and not((cmd_reg_1148 = ap_const_lv32_52)) and not((cmd_reg_1148 = ap_const_lv32_58)) and not((cmd_reg_1148 = ap_const_lv32_53)) and not((cmd_reg_1148 = ap_const_lv32_42)) and not((cmd_reg_1148 = ap_const_lv32_49)) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and ((cmd_reg_1148 = ap_const_lv32_42) or (cmd_reg_1148 = ap_const_lv32_49)))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((grp_cpu_step_fu_301_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((grp_read_u32_fu_338_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if (((grp_remove_hw_bkpt_fu_361_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                if (((ap_const_boolean_0 = ap_block_state10_on_subcall_done) and (cmd_reg_1148 = ap_const_lv32_42) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                elsif ((not((grp_read_u8_fu_346_ap_return = ap_const_lv32_1)) and not((grp_read_u8_fu_346_ap_return = ap_const_lv32_2)) and (ap_const_boolean_0 = ap_block_state10_on_subcall_done) and (cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                elsif (((grp_read_u8_fu_346_ap_return = ap_const_lv32_1) and (ap_const_boolean_0 = ap_block_state10_on_subcall_done) and (cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                elsif (((grp_read_u8_fu_346_ap_return = ap_const_lv32_2) and (ap_const_boolean_0 = ap_block_state10_on_subcall_done) and (cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((grp_write_u32_fu_327_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                if (((ap_const_boolean_0 = ap_block_state14_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state16) and (ap_const_boolean_0 = ap_block_state16_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state18) and ((icmp_ln168_reg_1190 = ap_const_lv1_1) or (hbkpt_active_q0 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                if (((grp_read_u8_fu_346_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                if (((ap_const_boolean_0 = ap_block_state22_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state23 => 
                if (((icmp_ln264_fu_1024_p2 = ap_const_lv1_1) and (grp_read_u8_fu_346_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                elsif (((icmp_ln264_fu_1024_p2 = ap_const_lv1_0) and (grp_read_u8_fu_346_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state25) and (ap_const_boolean_0 = ap_block_state25_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state25;
                end if;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state27 => 
                if (((grp_read_u32_fu_338_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                if (((ap_const_boolean_0 = ap_block_state29_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                if (((grp_read_u32_fu_338_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state31;
                end if;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state33) and (ap_const_boolean_0 = ap_block_state33_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state33;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state10_on_subcall_done_assign_proc : process(grp_read_u32_fu_338_ap_done, grp_read_u8_fu_346_ap_done, cmd_reg_1148)
    begin
                ap_block_state10_on_subcall_done <= (((grp_read_u8_fu_346_ap_done = ap_const_logic_0) and (cmd_reg_1148 = ap_const_lv32_49)) or ((grp_read_u32_fu_338_ap_done = ap_const_logic_0) and (cmd_reg_1148 = ap_const_lv32_42)));
    end process;


    ap_block_state14_on_subcall_done_assign_proc : process(grp_write_u32_fu_327_ap_done, ap_predicate_op96_call_state14)
    begin
                ap_block_state14_on_subcall_done <= ((ap_predicate_op96_call_state14 = ap_const_boolean_1) and (grp_write_u32_fu_327_ap_done = ap_const_logic_0));
    end process;


    ap_block_state16_on_subcall_done_assign_proc : process(cmd_reg_1148, grp_write_u32_fu_327_ap_done)
    begin
                ap_block_state16_on_subcall_done <= ((grp_write_u32_fu_327_ap_done = ap_const_logic_0) and (cmd_reg_1148 = ap_const_lv32_49));
    end process;


    ap_block_state22_on_subcall_done_assign_proc : process(grp_read_u32_fu_338_ap_done, halted_load_3_reg_1159)
    begin
                ap_block_state22_on_subcall_done <= ((grp_read_u32_fu_338_ap_done = ap_const_logic_0) and (halted_load_3_reg_1159 = ap_const_lv1_1));
    end process;


    ap_block_state25_on_subcall_done_assign_proc : process(grp_write_u32_fu_327_ap_done, ap_predicate_op140_call_state25, ap_predicate_op142_call_state25)
    begin
                ap_block_state25_on_subcall_done <= (((ap_predicate_op142_call_state25 = ap_const_boolean_1) and (grp_write_u32_fu_327_ap_done = ap_const_logic_0)) or ((ap_predicate_op140_call_state25 = ap_const_boolean_1) and (grp_write_u32_fu_327_ap_done = ap_const_logic_0)));
    end process;


    ap_block_state29_on_subcall_done_assign_proc : process(grp_read_u8_fu_346_ap_done, halted_load_1_reg_1167)
    begin
                ap_block_state29_on_subcall_done <= ((grp_read_u8_fu_346_ap_done = ap_const_logic_0) and (halted_load_1_reg_1167 = ap_const_lv1_1));
    end process;


    ap_block_state33_on_subcall_done_assign_proc : process(halted_load_reg_1171, grp_write_u8_fu_353_ap_done)
    begin
                ap_block_state33_on_subcall_done <= ((grp_write_u8_fu_353_ap_done = ap_const_logic_0) and (halted_load_reg_1171 = ap_const_lv1_1));
    end process;


    ap_block_state7_on_subcall_done_assign_proc : process(halted_load_4_reg_1155, grp_write_u32_fu_327_ap_done)
    begin
                ap_block_state7_on_subcall_done <= ((grp_write_u32_fu_327_ap_done = ap_const_logic_0) and (halted_load_4_reg_1155 = ap_const_lv1_1));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state16, ap_block_state16_on_subcall_done)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state16) and (ap_const_boolean_0 = ap_block_state16_on_subcall_done)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op140_call_state25_assign_proc : process(halted_load_2_reg_1163, icmp_ln264_reg_1217)
    begin
                ap_predicate_op140_call_state25 <= ((icmp_ln264_reg_1217 = ap_const_lv1_0) and (halted_load_2_reg_1163 = ap_const_lv1_1));
    end process;


    ap_predicate_op142_call_state25_assign_proc : process(halted_load_2_reg_1163, icmp_ln264_reg_1217)
    begin
                ap_predicate_op142_call_state25 <= ((icmp_ln264_reg_1217 = ap_const_lv1_1) and (halted_load_2_reg_1163 = ap_const_lv1_1));
    end process;


    ap_predicate_op96_call_state14_assign_proc : process(id_reg_1175)
    begin
                ap_predicate_op96_call_state14 <= ((id_reg_1175 = ap_const_lv32_2) or (id_reg_1175 = ap_const_lv32_1));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state16, ap_block_state16_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) and (ap_const_boolean_0 = ap_block_state16_on_subcall_done))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_cpu_step_fu_301_ap_start <= grp_cpu_step_fu_301_ap_start_reg;
    grp_fu_388_p4 <= reg_402(31 downto 2);
    grp_load_fu_379_p1 <= halted_i;
    grp_read_byte_fu_371_ap_start <= grp_read_byte_fu_371_ap_start_reg;
    grp_read_u32_fu_338_ap_start <= grp_read_u32_fu_338_ap_start_reg;
    grp_read_u8_fu_346_ap_start <= grp_read_u8_fu_346_ap_start_reg;
    grp_remove_hw_bkpt_fu_361_ap_start <= grp_remove_hw_bkpt_fu_361_ap_start_reg;
    grp_write_u32_fu_327_ap_start <= grp_write_u32_fu_327_ap_start_reg;

    grp_write_u32_fu_327_value_r_assign_proc : process(reg_397, cmd_reg_1148, halted_load_4_reg_1155, halted_load_2_reg_1163, ap_CS_fsm_state14, ap_predicate_op96_call_state14, p_0_i_reg_1185, icmp_ln264_reg_1217, x_load_reg_1226, ap_CS_fsm_state7, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state25)
    begin
        if (((icmp_ln264_reg_1217 = ap_const_lv1_0) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            grp_write_u32_fu_327_value_r <= x_load_reg_1226;
        elsif (((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            grp_write_u32_fu_327_value_r <= p_0_i_reg_1185;
        elsif (((ap_predicate_op96_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            grp_write_u32_fu_327_value_r <= ap_const_lv32_CAFE00;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_write_u32_fu_327_value_r <= ap_const_lv32_100;
        elsif ((((icmp_ln264_reg_1217 = ap_const_lv1_1) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((halted_load_4_reg_1155 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            grp_write_u32_fu_327_value_r <= reg_397;
        else 
            grp_write_u32_fu_327_value_r <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_write_u8_fu_353_ap_start <= grp_write_u8_fu_353_ap_start_reg;

    halted_o_assign_proc : process(halted_i, cmd_reg_1148, grp_load_fu_379_p1, ap_CS_fsm_state3, grp_cpu_step_fu_301_halted, grp_cpu_step_fu_301_halted_ap_vld, ap_CS_fsm_state5)
    begin
        if (((cmd_reg_1148 = ap_const_lv32_48) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            halted_o <= ap_const_lv1_1;
        elsif (((grp_load_fu_379_p1 = ap_const_lv1_1) and (cmd_reg_1148 = ap_const_lv32_50) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            halted_o <= ap_const_lv1_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_cpu_step_fu_301_halted_ap_vld = ap_const_logic_1))) then 
            halted_o <= grp_cpu_step_fu_301_halted;
        else 
            halted_o <= halted_i;
        end if; 
    end process;


    halted_o_ap_vld_assign_proc : process(cmd_reg_1148, grp_load_fu_379_p1, ap_CS_fsm_state3, grp_cpu_step_fu_301_halted_ap_vld, ap_CS_fsm_state5)
    begin
        if ((((cmd_reg_1148 = ap_const_lv32_48) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((grp_load_fu_379_p1 = ap_const_lv1_1) and (cmd_reg_1148 = ap_const_lv32_50) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            halted_o_ap_vld <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            halted_o_ap_vld <= grp_cpu_step_fu_301_halted_ap_vld;
        else 
            halted_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    hbkpt_active_address0_assign_proc : process(ap_CS_fsm_state17, zext_ln169_fu_1007_p1, hbkpt_active_addr_reg_1204, grp_cpu_step_fu_301_hbkpt_active_address0, grp_remove_hw_bkpt_fu_361_hbkpt_active_address0, ap_CS_fsm_state18, ap_CS_fsm_state5, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            hbkpt_active_address0 <= hbkpt_active_addr_reg_1204;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            hbkpt_active_address0 <= zext_ln169_fu_1007_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            hbkpt_active_address0 <= grp_remove_hw_bkpt_fu_361_hbkpt_active_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            hbkpt_active_address0 <= grp_cpu_step_fu_301_hbkpt_active_address0;
        else 
            hbkpt_active_address0 <= "XXXXX";
        end if; 
    end process;


    hbkpt_active_ce0_assign_proc : process(ap_CS_fsm_state17, grp_cpu_step_fu_301_hbkpt_active_ce0, grp_remove_hw_bkpt_fu_361_hbkpt_active_ce0, ap_CS_fsm_state18, ap_CS_fsm_state5, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            hbkpt_active_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            hbkpt_active_ce0 <= grp_remove_hw_bkpt_fu_361_hbkpt_active_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            hbkpt_active_ce0 <= grp_cpu_step_fu_301_hbkpt_active_ce0;
        else 
            hbkpt_active_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    hbkpt_active_d0_assign_proc : process(grp_remove_hw_bkpt_fu_361_hbkpt_active_d0, ap_CS_fsm_state18, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            hbkpt_active_d0 <= ap_const_lv1_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            hbkpt_active_d0 <= grp_remove_hw_bkpt_fu_361_hbkpt_active_d0;
        else 
            hbkpt_active_d0 <= "X";
        end if; 
    end process;


    hbkpt_active_we0_assign_proc : process(hbkpt_active_q0, icmp_ln168_reg_1190, grp_remove_hw_bkpt_fu_361_hbkpt_active_we0, ap_CS_fsm_state18, ap_CS_fsm_state9)
    begin
        if (((icmp_ln168_reg_1190 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18) and (hbkpt_active_q0 = ap_const_lv1_0))) then 
            hbkpt_active_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            hbkpt_active_we0 <= grp_remove_hw_bkpt_fu_361_hbkpt_active_we0;
        else 
            hbkpt_active_we0 <= ap_const_logic_0;
        end if; 
    end process;


    hbkpt_target_address0_assign_proc : process(zext_ln169_reg_1199, grp_cpu_step_fu_301_hbkpt_target_address0, grp_remove_hw_bkpt_fu_361_hbkpt_target_address0, ap_CS_fsm_state18, ap_CS_fsm_state5, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            hbkpt_target_address0 <= zext_ln169_reg_1199(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            hbkpt_target_address0 <= grp_remove_hw_bkpt_fu_361_hbkpt_target_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            hbkpt_target_address0 <= grp_cpu_step_fu_301_hbkpt_target_address0;
        else 
            hbkpt_target_address0 <= "XXXXX";
        end if; 
    end process;


    hbkpt_target_ce0_assign_proc : process(grp_cpu_step_fu_301_hbkpt_target_ce0, grp_remove_hw_bkpt_fu_361_hbkpt_target_ce0, ap_CS_fsm_state18, ap_CS_fsm_state5, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            hbkpt_target_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            hbkpt_target_ce0 <= grp_remove_hw_bkpt_fu_361_hbkpt_target_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            hbkpt_target_ce0 <= grp_cpu_step_fu_301_hbkpt_target_ce0;
        else 
            hbkpt_target_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    hbkpt_target_we0_assign_proc : process(hbkpt_active_q0, icmp_ln168_reg_1190, ap_CS_fsm_state18)
    begin
        if (((icmp_ln168_reg_1190 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18) and (hbkpt_active_q0 = ap_const_lv1_0))) then 
            hbkpt_target_we0 <= ap_const_logic_1;
        else 
            hbkpt_target_we0 <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln101_1_fu_1098_p2 <= "1" when (trunc_ln234_reg_1235 = ap_const_lv2_1) else "0";
    icmp_ln101_2_fu_1103_p2 <= "1" when (trunc_ln234_reg_1235 = ap_const_lv2_0) else "0";
    icmp_ln101_fu_1093_p2 <= "1" when (trunc_ln234_reg_1235 = ap_const_lv2_2) else "0";
    icmp_ln168_fu_995_p2 <= "1" when (k_0_i_reg_290 = ap_const_lv6_20) else "0";
    icmp_ln264_fu_1024_p2 <= "1" when (regid_fu_1020_p1 = ap_const_lv8_20) else "0";

    ir_assign_proc : process(cmd_reg_1148, ap_CS_fsm_state2, grp_read_byte_fu_371_ap_done, grp_load_fu_379_p1, ap_CS_fsm_state3, or_ln329_fu_413_p2, or_ln319_fu_426_p2, or_ln276_fu_433_p2, or_ln257_fu_440_p2, or_ln247_fu_447_p2, or_ln231_fu_454_p2, or_ln225_fu_461_p2)
    begin
        if (((cmd_reg_1148 = ap_const_lv32_48) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ir <= or_ln225_fu_461_p2;
        elsif (((grp_load_fu_379_p1 = ap_const_lv1_1) and (cmd_reg_1148 = ap_const_lv32_4D) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ir <= or_ln231_fu_454_p2;
        elsif (((grp_load_fu_379_p1 = ap_const_lv1_1) and (cmd_reg_1148 = ap_const_lv32_57) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ir <= or_ln247_fu_447_p2;
        elsif (((grp_load_fu_379_p1 = ap_const_lv1_1) and (cmd_reg_1148 = ap_const_lv32_52) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ir <= or_ln257_fu_440_p2;
        elsif (((grp_load_fu_379_p1 = ap_const_lv1_1) and (cmd_reg_1148 = ap_const_lv32_58) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ir <= or_ln276_fu_433_p2;
        elsif (((grp_load_fu_379_p1 = ap_const_lv1_1) and (cmd_reg_1148 = ap_const_lv32_53) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ir <= or_ln319_fu_426_p2;
        elsif (((grp_load_fu_379_p1 = ap_const_lv1_1) and (cmd_reg_1148 = ap_const_lv32_50) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ir <= or_ln329_fu_413_p2;
        elsif (((grp_read_byte_fu_371_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ir <= ap_const_lv32_CAFE;
        else 
            ir <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ir_ap_vld_assign_proc : process(cmd_reg_1148, ap_CS_fsm_state2, grp_read_byte_fu_371_ap_done, grp_load_fu_379_p1, ap_CS_fsm_state3)
    begin
        if ((((cmd_reg_1148 = ap_const_lv32_48) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((grp_load_fu_379_p1 = ap_const_lv1_1) and (cmd_reg_1148 = ap_const_lv32_50) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((grp_load_fu_379_p1 = ap_const_lv1_1) and (cmd_reg_1148 = ap_const_lv32_4D) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((grp_load_fu_379_p1 = ap_const_lv1_1) and (cmd_reg_1148 = ap_const_lv32_57) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((grp_load_fu_379_p1 = ap_const_lv1_1) and (cmd_reg_1148 = ap_const_lv32_52) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((grp_load_fu_379_p1 = ap_const_lv1_1) and (cmd_reg_1148 = ap_const_lv32_58) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((grp_load_fu_379_p1 = ap_const_lv1_1) and (cmd_reg_1148 = ap_const_lv32_53) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((grp_read_byte_fu_371_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            ir_ap_vld <= ap_const_logic_1;
        else 
            ir_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    k_fu_1001_p2 <= std_logic_vector(unsigned(k_0_i_reg_290) + unsigned(ap_const_lv6_1));
    lshr_ln_fu_1075_p4 <= grp_read_u32_fu_338_ap_return(31 downto 2);

    m_axi_uart_ARADDR_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state6, ap_CS_fsm_state26, ap_CS_fsm_state8, ap_CS_fsm_state10, cmd_reg_1148, ap_CS_fsm_state27, ap_CS_fsm_state2, grp_load_fu_379_p1, halted_load_4_reg_1155, ap_CS_fsm_state3, halted_load_3_reg_1159, halted_load_2_reg_1163, halted_load_1_reg_1167, halted_load_reg_1171, ap_CS_fsm_state14, ap_predicate_op96_call_state14, ap_CS_fsm_state15, ap_CS_fsm_state20, icmp_ln264_reg_1217, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state31, ap_CS_fsm_state32, grp_write_u32_fu_327_m_axi_uart_ARADDR, grp_read_u32_fu_338_m_axi_uart_ARADDR, grp_read_u8_fu_346_m_axi_uart_ARADDR, grp_write_u8_fu_353_m_axi_uart_ARADDR, grp_read_byte_fu_371_m_axi_uart_ARADDR, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state7, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state25, ap_CS_fsm_state21, ap_CS_fsm_state30, ap_CS_fsm_state22, ap_CS_fsm_state19, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state33)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            m_axi_uart_ARADDR <= grp_read_byte_fu_371_m_axi_uart_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state32) or ((halted_load_reg_1171 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33)))) then 
            m_axi_uart_ARADDR <= grp_write_u8_fu_353_m_axi_uart_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state20) or ((halted_load_1_reg_1167 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((grp_load_fu_379_p1 = ap_const_lv1_1) and (cmd_reg_1148 = ap_const_lv32_52) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            m_axi_uart_ARADDR <= grp_read_u8_fu_346_m_axi_uart_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state8) or ((halted_load_3_reg_1159 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((cmd_reg_1148 = ap_const_lv32_55) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((grp_load_fu_379_p1 = ap_const_lv1_1) and (cmd_reg_1148 = ap_const_lv32_57) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_42) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_42) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            m_axi_uart_ARADDR <= grp_read_u32_fu_338_m_axi_uart_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln264_reg_1217 = ap_const_lv1_1) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((icmp_ln264_reg_1217 = ap_const_lv1_0) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((halted_load_4_reg_1155 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_predicate_op96_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            m_axi_uart_ARADDR <= grp_write_u32_fu_327_m_axi_uart_ARADDR;
        else 
            m_axi_uart_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_uart_ARBURST_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state6, ap_CS_fsm_state26, ap_CS_fsm_state8, ap_CS_fsm_state10, cmd_reg_1148, ap_CS_fsm_state27, ap_CS_fsm_state2, grp_load_fu_379_p1, halted_load_4_reg_1155, ap_CS_fsm_state3, halted_load_3_reg_1159, halted_load_2_reg_1163, halted_load_1_reg_1167, halted_load_reg_1171, ap_CS_fsm_state14, ap_predicate_op96_call_state14, ap_CS_fsm_state15, ap_CS_fsm_state20, icmp_ln264_reg_1217, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state31, ap_CS_fsm_state32, grp_write_u32_fu_327_m_axi_uart_ARBURST, grp_read_u32_fu_338_m_axi_uart_ARBURST, grp_read_u8_fu_346_m_axi_uart_ARBURST, grp_write_u8_fu_353_m_axi_uart_ARBURST, grp_read_byte_fu_371_m_axi_uart_ARBURST, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state7, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state25, ap_CS_fsm_state21, ap_CS_fsm_state30, ap_CS_fsm_state22, ap_CS_fsm_state19, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state33)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            m_axi_uart_ARBURST <= grp_read_byte_fu_371_m_axi_uart_ARBURST;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state32) or ((halted_load_reg_1171 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33)))) then 
            m_axi_uart_ARBURST <= grp_write_u8_fu_353_m_axi_uart_ARBURST;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state20) or ((halted_load_1_reg_1167 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((grp_load_fu_379_p1 = ap_const_lv1_1) and (cmd_reg_1148 = ap_const_lv32_52) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            m_axi_uart_ARBURST <= grp_read_u8_fu_346_m_axi_uart_ARBURST;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state8) or ((halted_load_3_reg_1159 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((cmd_reg_1148 = ap_const_lv32_55) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((grp_load_fu_379_p1 = ap_const_lv1_1) and (cmd_reg_1148 = ap_const_lv32_57) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_42) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_42) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            m_axi_uart_ARBURST <= grp_read_u32_fu_338_m_axi_uart_ARBURST;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln264_reg_1217 = ap_const_lv1_1) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((icmp_ln264_reg_1217 = ap_const_lv1_0) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((halted_load_4_reg_1155 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_predicate_op96_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            m_axi_uart_ARBURST <= grp_write_u32_fu_327_m_axi_uart_ARBURST;
        else 
            m_axi_uart_ARBURST <= "XX";
        end if; 
    end process;


    m_axi_uart_ARCACHE_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state6, ap_CS_fsm_state26, ap_CS_fsm_state8, ap_CS_fsm_state10, cmd_reg_1148, ap_CS_fsm_state27, ap_CS_fsm_state2, grp_load_fu_379_p1, halted_load_4_reg_1155, ap_CS_fsm_state3, halted_load_3_reg_1159, halted_load_2_reg_1163, halted_load_1_reg_1167, halted_load_reg_1171, ap_CS_fsm_state14, ap_predicate_op96_call_state14, ap_CS_fsm_state15, ap_CS_fsm_state20, icmp_ln264_reg_1217, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state31, ap_CS_fsm_state32, grp_write_u32_fu_327_m_axi_uart_ARCACHE, grp_read_u32_fu_338_m_axi_uart_ARCACHE, grp_read_u8_fu_346_m_axi_uart_ARCACHE, grp_write_u8_fu_353_m_axi_uart_ARCACHE, grp_read_byte_fu_371_m_axi_uart_ARCACHE, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state7, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state25, ap_CS_fsm_state21, ap_CS_fsm_state30, ap_CS_fsm_state22, ap_CS_fsm_state19, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state33)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            m_axi_uart_ARCACHE <= grp_read_byte_fu_371_m_axi_uart_ARCACHE;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state32) or ((halted_load_reg_1171 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33)))) then 
            m_axi_uart_ARCACHE <= grp_write_u8_fu_353_m_axi_uart_ARCACHE;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state20) or ((halted_load_1_reg_1167 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((grp_load_fu_379_p1 = ap_const_lv1_1) and (cmd_reg_1148 = ap_const_lv32_52) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            m_axi_uart_ARCACHE <= grp_read_u8_fu_346_m_axi_uart_ARCACHE;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state8) or ((halted_load_3_reg_1159 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((cmd_reg_1148 = ap_const_lv32_55) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((grp_load_fu_379_p1 = ap_const_lv1_1) and (cmd_reg_1148 = ap_const_lv32_57) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_42) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_42) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            m_axi_uart_ARCACHE <= grp_read_u32_fu_338_m_axi_uart_ARCACHE;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln264_reg_1217 = ap_const_lv1_1) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((icmp_ln264_reg_1217 = ap_const_lv1_0) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((halted_load_4_reg_1155 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_predicate_op96_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            m_axi_uart_ARCACHE <= grp_write_u32_fu_327_m_axi_uart_ARCACHE;
        else 
            m_axi_uart_ARCACHE <= "XXXX";
        end if; 
    end process;


    m_axi_uart_ARID_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state6, ap_CS_fsm_state26, ap_CS_fsm_state8, ap_CS_fsm_state10, cmd_reg_1148, ap_CS_fsm_state27, ap_CS_fsm_state2, grp_load_fu_379_p1, halted_load_4_reg_1155, ap_CS_fsm_state3, halted_load_3_reg_1159, halted_load_2_reg_1163, halted_load_1_reg_1167, halted_load_reg_1171, ap_CS_fsm_state14, ap_predicate_op96_call_state14, ap_CS_fsm_state15, ap_CS_fsm_state20, icmp_ln264_reg_1217, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state31, ap_CS_fsm_state32, grp_write_u32_fu_327_m_axi_uart_ARID, grp_read_u32_fu_338_m_axi_uart_ARID, grp_read_u8_fu_346_m_axi_uart_ARID, grp_write_u8_fu_353_m_axi_uart_ARID, grp_read_byte_fu_371_m_axi_uart_ARID, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state7, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state25, ap_CS_fsm_state21, ap_CS_fsm_state30, ap_CS_fsm_state22, ap_CS_fsm_state19, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state33)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            m_axi_uart_ARID <= grp_read_byte_fu_371_m_axi_uart_ARID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state32) or ((halted_load_reg_1171 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33)))) then 
            m_axi_uart_ARID <= grp_write_u8_fu_353_m_axi_uart_ARID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state20) or ((halted_load_1_reg_1167 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((grp_load_fu_379_p1 = ap_const_lv1_1) and (cmd_reg_1148 = ap_const_lv32_52) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            m_axi_uart_ARID <= grp_read_u8_fu_346_m_axi_uart_ARID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state8) or ((halted_load_3_reg_1159 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((cmd_reg_1148 = ap_const_lv32_55) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((grp_load_fu_379_p1 = ap_const_lv1_1) and (cmd_reg_1148 = ap_const_lv32_57) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_42) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_42) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            m_axi_uart_ARID <= grp_read_u32_fu_338_m_axi_uart_ARID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln264_reg_1217 = ap_const_lv1_1) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((icmp_ln264_reg_1217 = ap_const_lv1_0) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((halted_load_4_reg_1155 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_predicate_op96_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            m_axi_uart_ARID <= grp_write_u32_fu_327_m_axi_uart_ARID;
        else 
            m_axi_uart_ARID <= "X";
        end if; 
    end process;


    m_axi_uart_ARLEN_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state6, ap_CS_fsm_state26, ap_CS_fsm_state8, ap_CS_fsm_state10, cmd_reg_1148, ap_CS_fsm_state27, ap_CS_fsm_state2, grp_load_fu_379_p1, halted_load_4_reg_1155, ap_CS_fsm_state3, halted_load_3_reg_1159, halted_load_2_reg_1163, halted_load_1_reg_1167, halted_load_reg_1171, ap_CS_fsm_state14, ap_predicate_op96_call_state14, ap_CS_fsm_state15, ap_CS_fsm_state20, icmp_ln264_reg_1217, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state31, ap_CS_fsm_state32, grp_write_u32_fu_327_m_axi_uart_ARLEN, grp_read_u32_fu_338_m_axi_uart_ARLEN, grp_read_u8_fu_346_m_axi_uart_ARLEN, grp_write_u8_fu_353_m_axi_uart_ARLEN, grp_read_byte_fu_371_m_axi_uart_ARLEN, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state7, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state25, ap_CS_fsm_state21, ap_CS_fsm_state30, ap_CS_fsm_state22, ap_CS_fsm_state19, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state33)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            m_axi_uart_ARLEN <= grp_read_byte_fu_371_m_axi_uart_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state32) or ((halted_load_reg_1171 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33)))) then 
            m_axi_uart_ARLEN <= grp_write_u8_fu_353_m_axi_uart_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state20) or ((halted_load_1_reg_1167 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((grp_load_fu_379_p1 = ap_const_lv1_1) and (cmd_reg_1148 = ap_const_lv32_52) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            m_axi_uart_ARLEN <= grp_read_u8_fu_346_m_axi_uart_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state8) or ((halted_load_3_reg_1159 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((cmd_reg_1148 = ap_const_lv32_55) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((grp_load_fu_379_p1 = ap_const_lv1_1) and (cmd_reg_1148 = ap_const_lv32_57) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_42) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_42) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            m_axi_uart_ARLEN <= grp_read_u32_fu_338_m_axi_uart_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln264_reg_1217 = ap_const_lv1_1) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((icmp_ln264_reg_1217 = ap_const_lv1_0) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((halted_load_4_reg_1155 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_predicate_op96_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            m_axi_uart_ARLEN <= grp_write_u32_fu_327_m_axi_uart_ARLEN;
        else 
            m_axi_uart_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_uart_ARLOCK_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state6, ap_CS_fsm_state26, ap_CS_fsm_state8, ap_CS_fsm_state10, cmd_reg_1148, ap_CS_fsm_state27, ap_CS_fsm_state2, grp_load_fu_379_p1, halted_load_4_reg_1155, ap_CS_fsm_state3, halted_load_3_reg_1159, halted_load_2_reg_1163, halted_load_1_reg_1167, halted_load_reg_1171, ap_CS_fsm_state14, ap_predicate_op96_call_state14, ap_CS_fsm_state15, ap_CS_fsm_state20, icmp_ln264_reg_1217, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state31, ap_CS_fsm_state32, grp_write_u32_fu_327_m_axi_uart_ARLOCK, grp_read_u32_fu_338_m_axi_uart_ARLOCK, grp_read_u8_fu_346_m_axi_uart_ARLOCK, grp_write_u8_fu_353_m_axi_uart_ARLOCK, grp_read_byte_fu_371_m_axi_uart_ARLOCK, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state7, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state25, ap_CS_fsm_state21, ap_CS_fsm_state30, ap_CS_fsm_state22, ap_CS_fsm_state19, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state33)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            m_axi_uart_ARLOCK <= grp_read_byte_fu_371_m_axi_uart_ARLOCK;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state32) or ((halted_load_reg_1171 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33)))) then 
            m_axi_uart_ARLOCK <= grp_write_u8_fu_353_m_axi_uart_ARLOCK;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state20) or ((halted_load_1_reg_1167 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((grp_load_fu_379_p1 = ap_const_lv1_1) and (cmd_reg_1148 = ap_const_lv32_52) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            m_axi_uart_ARLOCK <= grp_read_u8_fu_346_m_axi_uart_ARLOCK;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state8) or ((halted_load_3_reg_1159 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((cmd_reg_1148 = ap_const_lv32_55) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((grp_load_fu_379_p1 = ap_const_lv1_1) and (cmd_reg_1148 = ap_const_lv32_57) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_42) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_42) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            m_axi_uart_ARLOCK <= grp_read_u32_fu_338_m_axi_uart_ARLOCK;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln264_reg_1217 = ap_const_lv1_1) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((icmp_ln264_reg_1217 = ap_const_lv1_0) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((halted_load_4_reg_1155 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_predicate_op96_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            m_axi_uart_ARLOCK <= grp_write_u32_fu_327_m_axi_uart_ARLOCK;
        else 
            m_axi_uart_ARLOCK <= "XX";
        end if; 
    end process;


    m_axi_uart_ARPROT_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state6, ap_CS_fsm_state26, ap_CS_fsm_state8, ap_CS_fsm_state10, cmd_reg_1148, ap_CS_fsm_state27, ap_CS_fsm_state2, grp_load_fu_379_p1, halted_load_4_reg_1155, ap_CS_fsm_state3, halted_load_3_reg_1159, halted_load_2_reg_1163, halted_load_1_reg_1167, halted_load_reg_1171, ap_CS_fsm_state14, ap_predicate_op96_call_state14, ap_CS_fsm_state15, ap_CS_fsm_state20, icmp_ln264_reg_1217, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state31, ap_CS_fsm_state32, grp_write_u32_fu_327_m_axi_uart_ARPROT, grp_read_u32_fu_338_m_axi_uart_ARPROT, grp_read_u8_fu_346_m_axi_uart_ARPROT, grp_write_u8_fu_353_m_axi_uart_ARPROT, grp_read_byte_fu_371_m_axi_uart_ARPROT, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state7, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state25, ap_CS_fsm_state21, ap_CS_fsm_state30, ap_CS_fsm_state22, ap_CS_fsm_state19, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state33)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            m_axi_uart_ARPROT <= grp_read_byte_fu_371_m_axi_uart_ARPROT;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state32) or ((halted_load_reg_1171 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33)))) then 
            m_axi_uart_ARPROT <= grp_write_u8_fu_353_m_axi_uart_ARPROT;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state20) or ((halted_load_1_reg_1167 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((grp_load_fu_379_p1 = ap_const_lv1_1) and (cmd_reg_1148 = ap_const_lv32_52) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            m_axi_uart_ARPROT <= grp_read_u8_fu_346_m_axi_uart_ARPROT;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state8) or ((halted_load_3_reg_1159 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((cmd_reg_1148 = ap_const_lv32_55) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((grp_load_fu_379_p1 = ap_const_lv1_1) and (cmd_reg_1148 = ap_const_lv32_57) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_42) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_42) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            m_axi_uart_ARPROT <= grp_read_u32_fu_338_m_axi_uart_ARPROT;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln264_reg_1217 = ap_const_lv1_1) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((icmp_ln264_reg_1217 = ap_const_lv1_0) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((halted_load_4_reg_1155 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_predicate_op96_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            m_axi_uart_ARPROT <= grp_write_u32_fu_327_m_axi_uart_ARPROT;
        else 
            m_axi_uart_ARPROT <= "XXX";
        end if; 
    end process;


    m_axi_uart_ARQOS_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state6, ap_CS_fsm_state26, ap_CS_fsm_state8, ap_CS_fsm_state10, cmd_reg_1148, ap_CS_fsm_state27, ap_CS_fsm_state2, grp_load_fu_379_p1, halted_load_4_reg_1155, ap_CS_fsm_state3, halted_load_3_reg_1159, halted_load_2_reg_1163, halted_load_1_reg_1167, halted_load_reg_1171, ap_CS_fsm_state14, ap_predicate_op96_call_state14, ap_CS_fsm_state15, ap_CS_fsm_state20, icmp_ln264_reg_1217, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state31, ap_CS_fsm_state32, grp_write_u32_fu_327_m_axi_uart_ARQOS, grp_read_u32_fu_338_m_axi_uart_ARQOS, grp_read_u8_fu_346_m_axi_uart_ARQOS, grp_write_u8_fu_353_m_axi_uart_ARQOS, grp_read_byte_fu_371_m_axi_uart_ARQOS, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state7, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state25, ap_CS_fsm_state21, ap_CS_fsm_state30, ap_CS_fsm_state22, ap_CS_fsm_state19, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state33)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            m_axi_uart_ARQOS <= grp_read_byte_fu_371_m_axi_uart_ARQOS;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state32) or ((halted_load_reg_1171 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33)))) then 
            m_axi_uart_ARQOS <= grp_write_u8_fu_353_m_axi_uart_ARQOS;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state20) or ((halted_load_1_reg_1167 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((grp_load_fu_379_p1 = ap_const_lv1_1) and (cmd_reg_1148 = ap_const_lv32_52) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            m_axi_uart_ARQOS <= grp_read_u8_fu_346_m_axi_uart_ARQOS;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state8) or ((halted_load_3_reg_1159 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((cmd_reg_1148 = ap_const_lv32_55) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((grp_load_fu_379_p1 = ap_const_lv1_1) and (cmd_reg_1148 = ap_const_lv32_57) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_42) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_42) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            m_axi_uart_ARQOS <= grp_read_u32_fu_338_m_axi_uart_ARQOS;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln264_reg_1217 = ap_const_lv1_1) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((icmp_ln264_reg_1217 = ap_const_lv1_0) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((halted_load_4_reg_1155 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_predicate_op96_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            m_axi_uart_ARQOS <= grp_write_u32_fu_327_m_axi_uart_ARQOS;
        else 
            m_axi_uart_ARQOS <= "XXXX";
        end if; 
    end process;


    m_axi_uart_ARREGION_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state6, ap_CS_fsm_state26, ap_CS_fsm_state8, ap_CS_fsm_state10, cmd_reg_1148, ap_CS_fsm_state27, ap_CS_fsm_state2, grp_load_fu_379_p1, halted_load_4_reg_1155, ap_CS_fsm_state3, halted_load_3_reg_1159, halted_load_2_reg_1163, halted_load_1_reg_1167, halted_load_reg_1171, ap_CS_fsm_state14, ap_predicate_op96_call_state14, ap_CS_fsm_state15, ap_CS_fsm_state20, icmp_ln264_reg_1217, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state31, ap_CS_fsm_state32, grp_write_u32_fu_327_m_axi_uart_ARREGION, grp_read_u32_fu_338_m_axi_uart_ARREGION, grp_read_u8_fu_346_m_axi_uart_ARREGION, grp_write_u8_fu_353_m_axi_uart_ARREGION, grp_read_byte_fu_371_m_axi_uart_ARREGION, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state7, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state25, ap_CS_fsm_state21, ap_CS_fsm_state30, ap_CS_fsm_state22, ap_CS_fsm_state19, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state33)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            m_axi_uart_ARREGION <= grp_read_byte_fu_371_m_axi_uart_ARREGION;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state32) or ((halted_load_reg_1171 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33)))) then 
            m_axi_uart_ARREGION <= grp_write_u8_fu_353_m_axi_uart_ARREGION;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state20) or ((halted_load_1_reg_1167 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((grp_load_fu_379_p1 = ap_const_lv1_1) and (cmd_reg_1148 = ap_const_lv32_52) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            m_axi_uart_ARREGION <= grp_read_u8_fu_346_m_axi_uart_ARREGION;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state8) or ((halted_load_3_reg_1159 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((cmd_reg_1148 = ap_const_lv32_55) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((grp_load_fu_379_p1 = ap_const_lv1_1) and (cmd_reg_1148 = ap_const_lv32_57) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_42) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_42) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            m_axi_uart_ARREGION <= grp_read_u32_fu_338_m_axi_uart_ARREGION;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln264_reg_1217 = ap_const_lv1_1) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((icmp_ln264_reg_1217 = ap_const_lv1_0) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((halted_load_4_reg_1155 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_predicate_op96_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            m_axi_uart_ARREGION <= grp_write_u32_fu_327_m_axi_uart_ARREGION;
        else 
            m_axi_uart_ARREGION <= "XXXX";
        end if; 
    end process;


    m_axi_uart_ARSIZE_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state6, ap_CS_fsm_state26, ap_CS_fsm_state8, ap_CS_fsm_state10, cmd_reg_1148, ap_CS_fsm_state27, ap_CS_fsm_state2, grp_load_fu_379_p1, halted_load_4_reg_1155, ap_CS_fsm_state3, halted_load_3_reg_1159, halted_load_2_reg_1163, halted_load_1_reg_1167, halted_load_reg_1171, ap_CS_fsm_state14, ap_predicate_op96_call_state14, ap_CS_fsm_state15, ap_CS_fsm_state20, icmp_ln264_reg_1217, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state31, ap_CS_fsm_state32, grp_write_u32_fu_327_m_axi_uart_ARSIZE, grp_read_u32_fu_338_m_axi_uart_ARSIZE, grp_read_u8_fu_346_m_axi_uart_ARSIZE, grp_write_u8_fu_353_m_axi_uart_ARSIZE, grp_read_byte_fu_371_m_axi_uart_ARSIZE, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state7, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state25, ap_CS_fsm_state21, ap_CS_fsm_state30, ap_CS_fsm_state22, ap_CS_fsm_state19, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state33)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            m_axi_uart_ARSIZE <= grp_read_byte_fu_371_m_axi_uart_ARSIZE;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state32) or ((halted_load_reg_1171 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33)))) then 
            m_axi_uart_ARSIZE <= grp_write_u8_fu_353_m_axi_uart_ARSIZE;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state20) or ((halted_load_1_reg_1167 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((grp_load_fu_379_p1 = ap_const_lv1_1) and (cmd_reg_1148 = ap_const_lv32_52) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            m_axi_uart_ARSIZE <= grp_read_u8_fu_346_m_axi_uart_ARSIZE;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state8) or ((halted_load_3_reg_1159 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((cmd_reg_1148 = ap_const_lv32_55) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((grp_load_fu_379_p1 = ap_const_lv1_1) and (cmd_reg_1148 = ap_const_lv32_57) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_42) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_42) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            m_axi_uart_ARSIZE <= grp_read_u32_fu_338_m_axi_uart_ARSIZE;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln264_reg_1217 = ap_const_lv1_1) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((icmp_ln264_reg_1217 = ap_const_lv1_0) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((halted_load_4_reg_1155 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_predicate_op96_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            m_axi_uart_ARSIZE <= grp_write_u32_fu_327_m_axi_uart_ARSIZE;
        else 
            m_axi_uart_ARSIZE <= "XXX";
        end if; 
    end process;


    m_axi_uart_ARUSER_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state6, ap_CS_fsm_state26, ap_CS_fsm_state8, ap_CS_fsm_state10, cmd_reg_1148, ap_CS_fsm_state27, ap_CS_fsm_state2, grp_load_fu_379_p1, halted_load_4_reg_1155, ap_CS_fsm_state3, halted_load_3_reg_1159, halted_load_2_reg_1163, halted_load_1_reg_1167, halted_load_reg_1171, ap_CS_fsm_state14, ap_predicate_op96_call_state14, ap_CS_fsm_state15, ap_CS_fsm_state20, icmp_ln264_reg_1217, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state31, ap_CS_fsm_state32, grp_write_u32_fu_327_m_axi_uart_ARUSER, grp_read_u32_fu_338_m_axi_uart_ARUSER, grp_read_u8_fu_346_m_axi_uart_ARUSER, grp_write_u8_fu_353_m_axi_uart_ARUSER, grp_read_byte_fu_371_m_axi_uart_ARUSER, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state7, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state25, ap_CS_fsm_state21, ap_CS_fsm_state30, ap_CS_fsm_state22, ap_CS_fsm_state19, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state33)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            m_axi_uart_ARUSER <= grp_read_byte_fu_371_m_axi_uart_ARUSER;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state32) or ((halted_load_reg_1171 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33)))) then 
            m_axi_uart_ARUSER <= grp_write_u8_fu_353_m_axi_uart_ARUSER;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state20) or ((halted_load_1_reg_1167 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((grp_load_fu_379_p1 = ap_const_lv1_1) and (cmd_reg_1148 = ap_const_lv32_52) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            m_axi_uart_ARUSER <= grp_read_u8_fu_346_m_axi_uart_ARUSER;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state8) or ((halted_load_3_reg_1159 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((cmd_reg_1148 = ap_const_lv32_55) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((grp_load_fu_379_p1 = ap_const_lv1_1) and (cmd_reg_1148 = ap_const_lv32_57) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_42) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_42) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            m_axi_uart_ARUSER <= grp_read_u32_fu_338_m_axi_uart_ARUSER;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln264_reg_1217 = ap_const_lv1_1) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((icmp_ln264_reg_1217 = ap_const_lv1_0) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((halted_load_4_reg_1155 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_predicate_op96_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            m_axi_uart_ARUSER <= grp_write_u32_fu_327_m_axi_uart_ARUSER;
        else 
            m_axi_uart_ARUSER <= "X";
        end if; 
    end process;


    m_axi_uart_ARVALID_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state6, ap_CS_fsm_state26, ap_CS_fsm_state8, ap_CS_fsm_state10, cmd_reg_1148, ap_CS_fsm_state27, ap_CS_fsm_state2, grp_load_fu_379_p1, halted_load_4_reg_1155, ap_CS_fsm_state3, halted_load_3_reg_1159, halted_load_2_reg_1163, halted_load_1_reg_1167, halted_load_reg_1171, ap_CS_fsm_state14, ap_predicate_op96_call_state14, ap_CS_fsm_state15, ap_CS_fsm_state20, icmp_ln264_reg_1217, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state31, ap_CS_fsm_state32, grp_write_u32_fu_327_m_axi_uart_ARVALID, grp_read_u32_fu_338_m_axi_uart_ARVALID, grp_read_u8_fu_346_m_axi_uart_ARVALID, grp_write_u8_fu_353_m_axi_uart_ARVALID, grp_read_byte_fu_371_m_axi_uart_ARVALID, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state7, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state25, ap_CS_fsm_state21, ap_CS_fsm_state30, ap_CS_fsm_state22, ap_CS_fsm_state19, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state33)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            m_axi_uart_ARVALID <= grp_read_byte_fu_371_m_axi_uart_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state32) or ((halted_load_reg_1171 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33)))) then 
            m_axi_uart_ARVALID <= grp_write_u8_fu_353_m_axi_uart_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state20) or ((halted_load_1_reg_1167 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((grp_load_fu_379_p1 = ap_const_lv1_1) and (cmd_reg_1148 = ap_const_lv32_52) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            m_axi_uart_ARVALID <= grp_read_u8_fu_346_m_axi_uart_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state8) or ((halted_load_3_reg_1159 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((cmd_reg_1148 = ap_const_lv32_55) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((grp_load_fu_379_p1 = ap_const_lv1_1) and (cmd_reg_1148 = ap_const_lv32_57) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_42) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_42) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            m_axi_uart_ARVALID <= grp_read_u32_fu_338_m_axi_uart_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln264_reg_1217 = ap_const_lv1_1) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((icmp_ln264_reg_1217 = ap_const_lv1_0) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((halted_load_4_reg_1155 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_predicate_op96_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            m_axi_uart_ARVALID <= grp_write_u32_fu_327_m_axi_uart_ARVALID;
        else 
            m_axi_uart_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_uart_AWADDR_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state26, cmd_reg_1148, halted_load_4_reg_1155, halted_load_2_reg_1163, halted_load_reg_1171, ap_CS_fsm_state14, ap_predicate_op96_call_state14, ap_CS_fsm_state15, icmp_ln264_reg_1217, ap_CS_fsm_state24, ap_CS_fsm_state32, grp_write_u32_fu_327_m_axi_uart_AWADDR, grp_write_u8_fu_353_m_axi_uart_AWADDR, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state7, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state25, ap_CS_fsm_state33)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or ((halted_load_reg_1171 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33)))) then 
            m_axi_uart_AWADDR <= grp_write_u8_fu_353_m_axi_uart_AWADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln264_reg_1217 = ap_const_lv1_1) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((icmp_ln264_reg_1217 = ap_const_lv1_0) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((halted_load_4_reg_1155 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_predicate_op96_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            m_axi_uart_AWADDR <= grp_write_u32_fu_327_m_axi_uart_AWADDR;
        else 
            m_axi_uart_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_uart_AWBURST_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state26, cmd_reg_1148, halted_load_4_reg_1155, halted_load_2_reg_1163, halted_load_reg_1171, ap_CS_fsm_state14, ap_predicate_op96_call_state14, ap_CS_fsm_state15, icmp_ln264_reg_1217, ap_CS_fsm_state24, ap_CS_fsm_state32, grp_write_u32_fu_327_m_axi_uart_AWBURST, grp_write_u8_fu_353_m_axi_uart_AWBURST, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state7, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state25, ap_CS_fsm_state33)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or ((halted_load_reg_1171 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33)))) then 
            m_axi_uart_AWBURST <= grp_write_u8_fu_353_m_axi_uart_AWBURST;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln264_reg_1217 = ap_const_lv1_1) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((icmp_ln264_reg_1217 = ap_const_lv1_0) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((halted_load_4_reg_1155 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_predicate_op96_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            m_axi_uart_AWBURST <= grp_write_u32_fu_327_m_axi_uart_AWBURST;
        else 
            m_axi_uart_AWBURST <= "XX";
        end if; 
    end process;


    m_axi_uart_AWCACHE_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state26, cmd_reg_1148, halted_load_4_reg_1155, halted_load_2_reg_1163, halted_load_reg_1171, ap_CS_fsm_state14, ap_predicate_op96_call_state14, ap_CS_fsm_state15, icmp_ln264_reg_1217, ap_CS_fsm_state24, ap_CS_fsm_state32, grp_write_u32_fu_327_m_axi_uart_AWCACHE, grp_write_u8_fu_353_m_axi_uart_AWCACHE, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state7, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state25, ap_CS_fsm_state33)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or ((halted_load_reg_1171 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33)))) then 
            m_axi_uart_AWCACHE <= grp_write_u8_fu_353_m_axi_uart_AWCACHE;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln264_reg_1217 = ap_const_lv1_1) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((icmp_ln264_reg_1217 = ap_const_lv1_0) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((halted_load_4_reg_1155 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_predicate_op96_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            m_axi_uart_AWCACHE <= grp_write_u32_fu_327_m_axi_uart_AWCACHE;
        else 
            m_axi_uart_AWCACHE <= "XXXX";
        end if; 
    end process;


    m_axi_uart_AWID_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state26, cmd_reg_1148, halted_load_4_reg_1155, halted_load_2_reg_1163, halted_load_reg_1171, ap_CS_fsm_state14, ap_predicate_op96_call_state14, ap_CS_fsm_state15, icmp_ln264_reg_1217, ap_CS_fsm_state24, ap_CS_fsm_state32, grp_write_u32_fu_327_m_axi_uart_AWID, grp_write_u8_fu_353_m_axi_uart_AWID, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state7, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state25, ap_CS_fsm_state33)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or ((halted_load_reg_1171 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33)))) then 
            m_axi_uart_AWID <= grp_write_u8_fu_353_m_axi_uart_AWID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln264_reg_1217 = ap_const_lv1_1) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((icmp_ln264_reg_1217 = ap_const_lv1_0) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((halted_load_4_reg_1155 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_predicate_op96_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            m_axi_uart_AWID <= grp_write_u32_fu_327_m_axi_uart_AWID;
        else 
            m_axi_uart_AWID <= "X";
        end if; 
    end process;


    m_axi_uart_AWLEN_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state26, cmd_reg_1148, halted_load_4_reg_1155, halted_load_2_reg_1163, halted_load_reg_1171, ap_CS_fsm_state14, ap_predicate_op96_call_state14, ap_CS_fsm_state15, icmp_ln264_reg_1217, ap_CS_fsm_state24, ap_CS_fsm_state32, grp_write_u32_fu_327_m_axi_uart_AWLEN, grp_write_u8_fu_353_m_axi_uart_AWLEN, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state7, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state25, ap_CS_fsm_state33)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or ((halted_load_reg_1171 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33)))) then 
            m_axi_uart_AWLEN <= grp_write_u8_fu_353_m_axi_uart_AWLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln264_reg_1217 = ap_const_lv1_1) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((icmp_ln264_reg_1217 = ap_const_lv1_0) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((halted_load_4_reg_1155 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_predicate_op96_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            m_axi_uart_AWLEN <= grp_write_u32_fu_327_m_axi_uart_AWLEN;
        else 
            m_axi_uart_AWLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_uart_AWLOCK_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state26, cmd_reg_1148, halted_load_4_reg_1155, halted_load_2_reg_1163, halted_load_reg_1171, ap_CS_fsm_state14, ap_predicate_op96_call_state14, ap_CS_fsm_state15, icmp_ln264_reg_1217, ap_CS_fsm_state24, ap_CS_fsm_state32, grp_write_u32_fu_327_m_axi_uart_AWLOCK, grp_write_u8_fu_353_m_axi_uart_AWLOCK, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state7, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state25, ap_CS_fsm_state33)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or ((halted_load_reg_1171 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33)))) then 
            m_axi_uart_AWLOCK <= grp_write_u8_fu_353_m_axi_uart_AWLOCK;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln264_reg_1217 = ap_const_lv1_1) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((icmp_ln264_reg_1217 = ap_const_lv1_0) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((halted_load_4_reg_1155 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_predicate_op96_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            m_axi_uart_AWLOCK <= grp_write_u32_fu_327_m_axi_uart_AWLOCK;
        else 
            m_axi_uart_AWLOCK <= "XX";
        end if; 
    end process;


    m_axi_uart_AWPROT_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state26, cmd_reg_1148, halted_load_4_reg_1155, halted_load_2_reg_1163, halted_load_reg_1171, ap_CS_fsm_state14, ap_predicate_op96_call_state14, ap_CS_fsm_state15, icmp_ln264_reg_1217, ap_CS_fsm_state24, ap_CS_fsm_state32, grp_write_u32_fu_327_m_axi_uart_AWPROT, grp_write_u8_fu_353_m_axi_uart_AWPROT, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state7, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state25, ap_CS_fsm_state33)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or ((halted_load_reg_1171 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33)))) then 
            m_axi_uart_AWPROT <= grp_write_u8_fu_353_m_axi_uart_AWPROT;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln264_reg_1217 = ap_const_lv1_1) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((icmp_ln264_reg_1217 = ap_const_lv1_0) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((halted_load_4_reg_1155 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_predicate_op96_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            m_axi_uart_AWPROT <= grp_write_u32_fu_327_m_axi_uart_AWPROT;
        else 
            m_axi_uart_AWPROT <= "XXX";
        end if; 
    end process;


    m_axi_uart_AWQOS_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state26, cmd_reg_1148, halted_load_4_reg_1155, halted_load_2_reg_1163, halted_load_reg_1171, ap_CS_fsm_state14, ap_predicate_op96_call_state14, ap_CS_fsm_state15, icmp_ln264_reg_1217, ap_CS_fsm_state24, ap_CS_fsm_state32, grp_write_u32_fu_327_m_axi_uart_AWQOS, grp_write_u8_fu_353_m_axi_uart_AWQOS, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state7, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state25, ap_CS_fsm_state33)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or ((halted_load_reg_1171 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33)))) then 
            m_axi_uart_AWQOS <= grp_write_u8_fu_353_m_axi_uart_AWQOS;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln264_reg_1217 = ap_const_lv1_1) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((icmp_ln264_reg_1217 = ap_const_lv1_0) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((halted_load_4_reg_1155 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_predicate_op96_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            m_axi_uart_AWQOS <= grp_write_u32_fu_327_m_axi_uart_AWQOS;
        else 
            m_axi_uart_AWQOS <= "XXXX";
        end if; 
    end process;


    m_axi_uart_AWREGION_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state26, cmd_reg_1148, halted_load_4_reg_1155, halted_load_2_reg_1163, halted_load_reg_1171, ap_CS_fsm_state14, ap_predicate_op96_call_state14, ap_CS_fsm_state15, icmp_ln264_reg_1217, ap_CS_fsm_state24, ap_CS_fsm_state32, grp_write_u32_fu_327_m_axi_uart_AWREGION, grp_write_u8_fu_353_m_axi_uart_AWREGION, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state7, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state25, ap_CS_fsm_state33)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or ((halted_load_reg_1171 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33)))) then 
            m_axi_uart_AWREGION <= grp_write_u8_fu_353_m_axi_uart_AWREGION;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln264_reg_1217 = ap_const_lv1_1) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((icmp_ln264_reg_1217 = ap_const_lv1_0) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((halted_load_4_reg_1155 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_predicate_op96_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            m_axi_uart_AWREGION <= grp_write_u32_fu_327_m_axi_uart_AWREGION;
        else 
            m_axi_uart_AWREGION <= "XXXX";
        end if; 
    end process;


    m_axi_uart_AWSIZE_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state26, cmd_reg_1148, halted_load_4_reg_1155, halted_load_2_reg_1163, halted_load_reg_1171, ap_CS_fsm_state14, ap_predicate_op96_call_state14, ap_CS_fsm_state15, icmp_ln264_reg_1217, ap_CS_fsm_state24, ap_CS_fsm_state32, grp_write_u32_fu_327_m_axi_uart_AWSIZE, grp_write_u8_fu_353_m_axi_uart_AWSIZE, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state7, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state25, ap_CS_fsm_state33)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or ((halted_load_reg_1171 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33)))) then 
            m_axi_uart_AWSIZE <= grp_write_u8_fu_353_m_axi_uart_AWSIZE;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln264_reg_1217 = ap_const_lv1_1) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((icmp_ln264_reg_1217 = ap_const_lv1_0) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((halted_load_4_reg_1155 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_predicate_op96_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            m_axi_uart_AWSIZE <= grp_write_u32_fu_327_m_axi_uart_AWSIZE;
        else 
            m_axi_uart_AWSIZE <= "XXX";
        end if; 
    end process;


    m_axi_uart_AWUSER_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state26, cmd_reg_1148, halted_load_4_reg_1155, halted_load_2_reg_1163, halted_load_reg_1171, ap_CS_fsm_state14, ap_predicate_op96_call_state14, ap_CS_fsm_state15, icmp_ln264_reg_1217, ap_CS_fsm_state24, ap_CS_fsm_state32, grp_write_u32_fu_327_m_axi_uart_AWUSER, grp_write_u8_fu_353_m_axi_uart_AWUSER, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state7, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state25, ap_CS_fsm_state33)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or ((halted_load_reg_1171 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33)))) then 
            m_axi_uart_AWUSER <= grp_write_u8_fu_353_m_axi_uart_AWUSER;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln264_reg_1217 = ap_const_lv1_1) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((icmp_ln264_reg_1217 = ap_const_lv1_0) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((halted_load_4_reg_1155 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_predicate_op96_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            m_axi_uart_AWUSER <= grp_write_u32_fu_327_m_axi_uart_AWUSER;
        else 
            m_axi_uart_AWUSER <= "X";
        end if; 
    end process;


    m_axi_uart_AWVALID_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state26, cmd_reg_1148, halted_load_4_reg_1155, halted_load_2_reg_1163, halted_load_reg_1171, ap_CS_fsm_state14, ap_predicate_op96_call_state14, ap_CS_fsm_state15, icmp_ln264_reg_1217, ap_CS_fsm_state24, ap_CS_fsm_state32, grp_write_u32_fu_327_m_axi_uart_AWVALID, grp_write_u8_fu_353_m_axi_uart_AWVALID, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state7, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state25, ap_CS_fsm_state33)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or ((halted_load_reg_1171 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33)))) then 
            m_axi_uart_AWVALID <= grp_write_u8_fu_353_m_axi_uart_AWVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln264_reg_1217 = ap_const_lv1_1) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((icmp_ln264_reg_1217 = ap_const_lv1_0) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((halted_load_4_reg_1155 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_predicate_op96_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            m_axi_uart_AWVALID <= grp_write_u32_fu_327_m_axi_uart_AWVALID;
        else 
            m_axi_uart_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_uart_BREADY_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state26, cmd_reg_1148, halted_load_4_reg_1155, halted_load_2_reg_1163, halted_load_reg_1171, ap_CS_fsm_state14, ap_predicate_op96_call_state14, ap_CS_fsm_state15, icmp_ln264_reg_1217, ap_CS_fsm_state24, ap_CS_fsm_state32, grp_write_u32_fu_327_m_axi_uart_BREADY, grp_write_u8_fu_353_m_axi_uart_BREADY, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state7, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state25, ap_CS_fsm_state33)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or ((halted_load_reg_1171 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33)))) then 
            m_axi_uart_BREADY <= grp_write_u8_fu_353_m_axi_uart_BREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln264_reg_1217 = ap_const_lv1_1) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((icmp_ln264_reg_1217 = ap_const_lv1_0) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((halted_load_4_reg_1155 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_predicate_op96_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            m_axi_uart_BREADY <= grp_write_u32_fu_327_m_axi_uart_BREADY;
        else 
            m_axi_uart_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_uart_RREADY_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state6, ap_CS_fsm_state26, ap_CS_fsm_state8, ap_CS_fsm_state10, cmd_reg_1148, ap_CS_fsm_state27, ap_CS_fsm_state2, grp_load_fu_379_p1, halted_load_4_reg_1155, ap_CS_fsm_state3, halted_load_3_reg_1159, halted_load_2_reg_1163, halted_load_1_reg_1167, halted_load_reg_1171, ap_CS_fsm_state14, ap_predicate_op96_call_state14, ap_CS_fsm_state15, ap_CS_fsm_state20, icmp_ln264_reg_1217, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state31, ap_CS_fsm_state32, grp_write_u32_fu_327_m_axi_uart_RREADY, grp_read_u32_fu_338_m_axi_uart_RREADY, grp_read_u8_fu_346_m_axi_uart_RREADY, grp_write_u8_fu_353_m_axi_uart_RREADY, grp_read_byte_fu_371_m_axi_uart_RREADY, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state7, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state25, ap_CS_fsm_state21, ap_CS_fsm_state30, ap_CS_fsm_state22, ap_CS_fsm_state19, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state33)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            m_axi_uart_RREADY <= grp_read_byte_fu_371_m_axi_uart_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state32) or ((halted_load_reg_1171 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33)))) then 
            m_axi_uart_RREADY <= grp_write_u8_fu_353_m_axi_uart_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state20) or ((halted_load_1_reg_1167 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((grp_load_fu_379_p1 = ap_const_lv1_1) and (cmd_reg_1148 = ap_const_lv32_52) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            m_axi_uart_RREADY <= grp_read_u8_fu_346_m_axi_uart_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state8) or ((halted_load_3_reg_1159 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((cmd_reg_1148 = ap_const_lv32_55) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((grp_load_fu_379_p1 = ap_const_lv1_1) and (cmd_reg_1148 = ap_const_lv32_57) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_42) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((cmd_reg_1148 = ap_const_lv32_42) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            m_axi_uart_RREADY <= grp_read_u32_fu_338_m_axi_uart_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln264_reg_1217 = ap_const_lv1_1) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((icmp_ln264_reg_1217 = ap_const_lv1_0) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((halted_load_4_reg_1155 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_predicate_op96_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            m_axi_uart_RREADY <= grp_write_u32_fu_327_m_axi_uart_RREADY;
        else 
            m_axi_uart_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_uart_WDATA_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state26, cmd_reg_1148, halted_load_4_reg_1155, halted_load_2_reg_1163, halted_load_reg_1171, ap_CS_fsm_state14, ap_predicate_op96_call_state14, ap_CS_fsm_state15, icmp_ln264_reg_1217, ap_CS_fsm_state24, ap_CS_fsm_state32, grp_write_u32_fu_327_m_axi_uart_WDATA, grp_write_u8_fu_353_m_axi_uart_WDATA, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state7, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state25, ap_CS_fsm_state33)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or ((halted_load_reg_1171 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33)))) then 
            m_axi_uart_WDATA <= grp_write_u8_fu_353_m_axi_uart_WDATA;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln264_reg_1217 = ap_const_lv1_1) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((icmp_ln264_reg_1217 = ap_const_lv1_0) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((halted_load_4_reg_1155 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_predicate_op96_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            m_axi_uart_WDATA <= grp_write_u32_fu_327_m_axi_uart_WDATA;
        else 
            m_axi_uart_WDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_uart_WID_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state26, cmd_reg_1148, halted_load_4_reg_1155, halted_load_2_reg_1163, halted_load_reg_1171, ap_CS_fsm_state14, ap_predicate_op96_call_state14, ap_CS_fsm_state15, icmp_ln264_reg_1217, ap_CS_fsm_state24, ap_CS_fsm_state32, grp_write_u32_fu_327_m_axi_uart_WID, grp_write_u8_fu_353_m_axi_uart_WID, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state7, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state25, ap_CS_fsm_state33)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or ((halted_load_reg_1171 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33)))) then 
            m_axi_uart_WID <= grp_write_u8_fu_353_m_axi_uart_WID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln264_reg_1217 = ap_const_lv1_1) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((icmp_ln264_reg_1217 = ap_const_lv1_0) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((halted_load_4_reg_1155 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_predicate_op96_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            m_axi_uart_WID <= grp_write_u32_fu_327_m_axi_uart_WID;
        else 
            m_axi_uart_WID <= "X";
        end if; 
    end process;


    m_axi_uart_WLAST_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state26, cmd_reg_1148, halted_load_4_reg_1155, halted_load_2_reg_1163, halted_load_reg_1171, ap_CS_fsm_state14, ap_predicate_op96_call_state14, ap_CS_fsm_state15, icmp_ln264_reg_1217, ap_CS_fsm_state24, ap_CS_fsm_state32, grp_write_u32_fu_327_m_axi_uart_WLAST, grp_write_u8_fu_353_m_axi_uart_WLAST, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state7, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state25, ap_CS_fsm_state33)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or ((halted_load_reg_1171 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33)))) then 
            m_axi_uart_WLAST <= grp_write_u8_fu_353_m_axi_uart_WLAST;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln264_reg_1217 = ap_const_lv1_1) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((icmp_ln264_reg_1217 = ap_const_lv1_0) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((halted_load_4_reg_1155 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_predicate_op96_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            m_axi_uart_WLAST <= grp_write_u32_fu_327_m_axi_uart_WLAST;
        else 
            m_axi_uart_WLAST <= 'X';
        end if; 
    end process;


    m_axi_uart_WSTRB_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state26, cmd_reg_1148, halted_load_4_reg_1155, halted_load_2_reg_1163, halted_load_reg_1171, ap_CS_fsm_state14, ap_predicate_op96_call_state14, ap_CS_fsm_state15, icmp_ln264_reg_1217, ap_CS_fsm_state24, ap_CS_fsm_state32, grp_write_u32_fu_327_m_axi_uart_WSTRB, grp_write_u8_fu_353_m_axi_uart_WSTRB, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state7, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state25, ap_CS_fsm_state33)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or ((halted_load_reg_1171 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33)))) then 
            m_axi_uart_WSTRB <= grp_write_u8_fu_353_m_axi_uart_WSTRB;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln264_reg_1217 = ap_const_lv1_1) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((icmp_ln264_reg_1217 = ap_const_lv1_0) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((halted_load_4_reg_1155 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_predicate_op96_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            m_axi_uart_WSTRB <= grp_write_u32_fu_327_m_axi_uart_WSTRB;
        else 
            m_axi_uart_WSTRB <= "XXXX";
        end if; 
    end process;


    m_axi_uart_WUSER_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state26, cmd_reg_1148, halted_load_4_reg_1155, halted_load_2_reg_1163, halted_load_reg_1171, ap_CS_fsm_state14, ap_predicate_op96_call_state14, ap_CS_fsm_state15, icmp_ln264_reg_1217, ap_CS_fsm_state24, ap_CS_fsm_state32, grp_write_u32_fu_327_m_axi_uart_WUSER, grp_write_u8_fu_353_m_axi_uart_WUSER, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state7, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state25, ap_CS_fsm_state33)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or ((halted_load_reg_1171 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33)))) then 
            m_axi_uart_WUSER <= grp_write_u8_fu_353_m_axi_uart_WUSER;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln264_reg_1217 = ap_const_lv1_1) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((icmp_ln264_reg_1217 = ap_const_lv1_0) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((halted_load_4_reg_1155 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_predicate_op96_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            m_axi_uart_WUSER <= grp_write_u32_fu_327_m_axi_uart_WUSER;
        else 
            m_axi_uart_WUSER <= "X";
        end if; 
    end process;


    m_axi_uart_WVALID_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state26, cmd_reg_1148, halted_load_4_reg_1155, halted_load_2_reg_1163, halted_load_reg_1171, ap_CS_fsm_state14, ap_predicate_op96_call_state14, ap_CS_fsm_state15, icmp_ln264_reg_1217, ap_CS_fsm_state24, ap_CS_fsm_state32, grp_write_u32_fu_327_m_axi_uart_WVALID, grp_write_u8_fu_353_m_axi_uart_WVALID, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state7, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state25, ap_CS_fsm_state33)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or ((halted_load_reg_1171 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33)))) then 
            m_axi_uart_WVALID <= grp_write_u8_fu_353_m_axi_uart_WVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln264_reg_1217 = ap_const_lv1_1) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((icmp_ln264_reg_1217 = ap_const_lv1_0) and (halted_load_2_reg_1163 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((halted_load_4_reg_1155 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_predicate_op96_call_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((cmd_reg_1148 = ap_const_lv32_49) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            m_axi_uart_WVALID <= grp_write_u32_fu_327_m_axi_uart_WVALID;
        else 
            m_axi_uart_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    mem0_address0_assign_proc : process(ap_CS_fsm_state31, grp_cpu_step_fu_301_mem0_address0, ap_CS_fsm_state5, ap_CS_fsm_state29, zext_ln113_fu_1066_p1, zext_ln102_fu_1085_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            mem0_address0 <= zext_ln102_fu_1085_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            mem0_address0 <= zext_ln113_fu_1066_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            mem0_address0 <= grp_cpu_step_fu_301_mem0_address0;
        else 
            mem0_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    mem0_ce0_assign_proc : process(grp_read_u32_fu_338_ap_done, ap_CS_fsm_state31, grp_cpu_step_fu_301_mem0_ce0, ap_CS_fsm_state5, ap_CS_fsm_state29, ap_block_state29_on_subcall_done)
    begin
        if ((((ap_const_boolean_0 = ap_block_state29_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((grp_read_u32_fu_338_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state31)))) then 
            mem0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            mem0_ce0 <= grp_cpu_step_fu_301_mem0_ce0;
        else 
            mem0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mem0_d0_assign_proc : process(grp_cpu_step_fu_301_mem0_d0, ap_CS_fsm_state5, ap_CS_fsm_state29, trunc_ln252_fu_1043_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            mem0_d0 <= trunc_ln252_fu_1043_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            mem0_d0 <= grp_cpu_step_fu_301_mem0_d0;
        else 
            mem0_d0 <= "XXXXXXXX";
        end if; 
    end process;


    mem0_we0_assign_proc : process(halted_load_1_reg_1167, trunc_ln249_reg_1231, grp_cpu_step_fu_301_mem0_we0, ap_CS_fsm_state5, ap_CS_fsm_state29, ap_block_state29_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state29_on_subcall_done) and (trunc_ln249_reg_1231 = ap_const_lv2_0) and (halted_load_1_reg_1167 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            mem0_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            mem0_we0 <= grp_cpu_step_fu_301_mem0_we0;
        else 
            mem0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    mem1_address0_assign_proc : process(ap_CS_fsm_state31, grp_cpu_step_fu_301_mem1_address0, ap_CS_fsm_state5, ap_CS_fsm_state29, zext_ln114_fu_1061_p1, zext_ln102_fu_1085_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            mem1_address0 <= zext_ln102_fu_1085_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            mem1_address0 <= zext_ln114_fu_1061_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            mem1_address0 <= grp_cpu_step_fu_301_mem1_address0;
        else 
            mem1_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    mem1_ce0_assign_proc : process(grp_read_u32_fu_338_ap_done, ap_CS_fsm_state31, grp_cpu_step_fu_301_mem1_ce0, ap_CS_fsm_state5, ap_CS_fsm_state29, ap_block_state29_on_subcall_done)
    begin
        if ((((ap_const_boolean_0 = ap_block_state29_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((grp_read_u32_fu_338_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state31)))) then 
            mem1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            mem1_ce0 <= grp_cpu_step_fu_301_mem1_ce0;
        else 
            mem1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mem1_d0_assign_proc : process(grp_cpu_step_fu_301_mem1_d0, ap_CS_fsm_state5, ap_CS_fsm_state29, trunc_ln252_fu_1043_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            mem1_d0 <= trunc_ln252_fu_1043_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            mem1_d0 <= grp_cpu_step_fu_301_mem1_d0;
        else 
            mem1_d0 <= "XXXXXXXX";
        end if; 
    end process;


    mem1_we0_assign_proc : process(halted_load_1_reg_1167, trunc_ln249_reg_1231, grp_cpu_step_fu_301_mem1_we0, ap_CS_fsm_state5, ap_CS_fsm_state29, ap_block_state29_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state29_on_subcall_done) and (trunc_ln249_reg_1231 = ap_const_lv2_1) and (halted_load_1_reg_1167 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            mem1_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            mem1_we0 <= grp_cpu_step_fu_301_mem1_we0;
        else 
            mem1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    mem2_address0_assign_proc : process(ap_CS_fsm_state31, grp_cpu_step_fu_301_mem2_address0, ap_CS_fsm_state5, ap_CS_fsm_state29, zext_ln115_fu_1056_p1, zext_ln102_fu_1085_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            mem2_address0 <= zext_ln102_fu_1085_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            mem2_address0 <= zext_ln115_fu_1056_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            mem2_address0 <= grp_cpu_step_fu_301_mem2_address0;
        else 
            mem2_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    mem2_ce0_assign_proc : process(grp_read_u32_fu_338_ap_done, ap_CS_fsm_state31, grp_cpu_step_fu_301_mem2_ce0, ap_CS_fsm_state5, ap_CS_fsm_state29, ap_block_state29_on_subcall_done)
    begin
        if ((((ap_const_boolean_0 = ap_block_state29_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((grp_read_u32_fu_338_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state31)))) then 
            mem2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            mem2_ce0 <= grp_cpu_step_fu_301_mem2_ce0;
        else 
            mem2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mem2_d0_assign_proc : process(grp_cpu_step_fu_301_mem2_d0, ap_CS_fsm_state5, ap_CS_fsm_state29, trunc_ln252_fu_1043_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            mem2_d0 <= trunc_ln252_fu_1043_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            mem2_d0 <= grp_cpu_step_fu_301_mem2_d0;
        else 
            mem2_d0 <= "XXXXXXXX";
        end if; 
    end process;


    mem2_we0_assign_proc : process(halted_load_1_reg_1167, trunc_ln249_reg_1231, grp_cpu_step_fu_301_mem2_we0, ap_CS_fsm_state5, ap_CS_fsm_state29, ap_block_state29_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state29_on_subcall_done) and (trunc_ln249_reg_1231 = ap_const_lv2_2) and (halted_load_1_reg_1167 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            mem2_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            mem2_we0 <= grp_cpu_step_fu_301_mem2_we0;
        else 
            mem2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    mem3_address0_assign_proc : process(ap_CS_fsm_state31, grp_cpu_step_fu_301_mem3_address0, ap_CS_fsm_state5, ap_CS_fsm_state29, zext_ln116_fu_1051_p1, zext_ln102_fu_1085_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            mem3_address0 <= zext_ln102_fu_1085_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            mem3_address0 <= zext_ln116_fu_1051_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            mem3_address0 <= grp_cpu_step_fu_301_mem3_address0;
        else 
            mem3_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    mem3_ce0_assign_proc : process(grp_read_u32_fu_338_ap_done, ap_CS_fsm_state31, grp_cpu_step_fu_301_mem3_ce0, ap_CS_fsm_state5, ap_CS_fsm_state29, ap_block_state29_on_subcall_done)
    begin
        if ((((ap_const_boolean_0 = ap_block_state29_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((grp_read_u32_fu_338_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state31)))) then 
            mem3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            mem3_ce0 <= grp_cpu_step_fu_301_mem3_ce0;
        else 
            mem3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mem3_d0_assign_proc : process(grp_cpu_step_fu_301_mem3_d0, ap_CS_fsm_state5, ap_CS_fsm_state29, trunc_ln252_fu_1043_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            mem3_d0 <= trunc_ln252_fu_1043_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            mem3_d0 <= grp_cpu_step_fu_301_mem3_d0;
        else 
            mem3_d0 <= "XXXXXXXX";
        end if; 
    end process;


    mem3_we0_assign_proc : process(halted_load_1_reg_1167, trunc_ln249_reg_1231, grp_cpu_step_fu_301_mem3_we0, ap_CS_fsm_state5, ap_CS_fsm_state29, ap_block_state29_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state29_on_subcall_done) and (trunc_ln249_reg_1231 = ap_const_lv2_3) and (halted_load_1_reg_1167 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            mem3_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            mem3_we0 <= grp_cpu_step_fu_301_mem3_we0;
        else 
            mem3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln101_fu_1116_p2 <= (icmp_ln101_2_fu_1103_p2 or icmp_ln101_1_fu_1098_p2);
    or_ln225_fu_461_p2 <= (cmd_count or ap_const_lv32_DEAD);
    or_ln231_fu_454_p2 <= (cmd_count or ap_const_lv32_CAFE);
    or_ln247_fu_447_p2 <= (cmd_count or ap_const_lv32_BABE);
    or_ln257_fu_440_p2 <= (cmd_count or ap_const_lv32_FACE);
    or_ln276_fu_433_p2 <= (cmd_count or ap_const_lv32_1234);
    or_ln319_fu_426_p2 <= (cmd_count or ap_const_lv32_F00D);
    or_ln329_fu_413_p2 <= (cmd_count or ap_const_lv32_FEED);

    pc_o_assign_proc : process(pc_i, grp_cpu_step_fu_301_pc_o, grp_cpu_step_fu_301_pc_o_ap_vld, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_cpu_step_fu_301_pc_o_ap_vld = ap_const_logic_1))) then 
            pc_o <= grp_cpu_step_fu_301_pc_o;
        else 
            pc_o <= pc_i;
        end if; 
    end process;


    pc_o_ap_vld_assign_proc : process(grp_cpu_step_fu_301_pc_o_ap_vld, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            pc_o_ap_vld <= grp_cpu_step_fu_301_pc_o_ap_vld;
        else 
            pc_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    regid_fu_1020_p1 <= grp_read_u8_fu_346_ap_return(8 - 1 downto 0);
    select_ln101_1_fu_1122_p3 <= 
        mem2_q0 when (icmp_ln101_fu_1093_p2(0) = '1') else 
        mem3_q0;
    select_ln101_2_fu_1130_p3 <= 
        select_ln101_fu_1108_p3 when (or_ln101_fu_1116_p2(0) = '1') else 
        select_ln101_1_fu_1122_p3;
    select_ln101_fu_1108_p3 <= 
        mem0_q0 when (icmp_ln101_2_fu_1103_p2(0) = '1') else 
        mem1_q0;
    trunc_ln234_fu_1071_p1 <= grp_read_u32_fu_338_ap_return(2 - 1 downto 0);
    trunc_ln249_fu_1039_p1 <= grp_read_u32_fu_338_ap_return(2 - 1 downto 0);
    trunc_ln252_fu_1043_p1 <= grp_read_u8_fu_346_ap_return(8 - 1 downto 0);
    trunc_ln268_fu_1030_p1 <= grp_read_u8_fu_346_ap_return(4 - 1 downto 0);
    trunc_ln277_fu_1012_p1 <= grp_read_u8_fu_346_ap_return(4 - 1 downto 0);
    trunc_ln304_fu_474_p1 <= id_reg_1175(8 - 1 downto 0);

    x_address0_assign_proc : process(ap_CS_fsm_state23, grp_cpu_step_fu_301_x_address0, ap_CS_fsm_state5, ap_CS_fsm_state22, zext_ln280_fu_1016_p1, zext_ln268_fu_1034_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            x_address0 <= zext_ln268_fu_1034_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            x_address0 <= zext_ln280_fu_1016_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            x_address0 <= grp_cpu_step_fu_301_x_address0;
        else 
            x_address0 <= "XXXXX";
        end if; 
    end process;


    x_ce0_assign_proc : process(grp_read_u8_fu_346_ap_done, ap_CS_fsm_state23, grp_cpu_step_fu_301_x_ce0, ap_CS_fsm_state5, ap_CS_fsm_state22, ap_block_state22_on_subcall_done)
    begin
        if ((((ap_const_boolean_0 = ap_block_state22_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((grp_read_u8_fu_346_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23)))) then 
            x_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            x_ce0 <= grp_cpu_step_fu_301_x_ce0;
        else 
            x_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    x_ce1_assign_proc : process(grp_cpu_step_fu_301_x_ce1, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            x_ce1 <= grp_cpu_step_fu_301_x_ce1;
        else 
            x_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    x_d0_assign_proc : process(grp_read_u32_fu_338_ap_return, grp_cpu_step_fu_301_x_d0, ap_CS_fsm_state5, ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            x_d0 <= grp_read_u32_fu_338_ap_return;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            x_d0 <= grp_cpu_step_fu_301_x_d0;
        else 
            x_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    x_we0_assign_proc : process(halted_load_3_reg_1159, grp_cpu_step_fu_301_x_we0, ap_CS_fsm_state5, ap_CS_fsm_state22, ap_block_state22_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state22_on_subcall_done) and (halted_load_3_reg_1159 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            x_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            x_we0 <= grp_cpu_step_fu_301_x_we0;
        else 
            x_we0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln102_fu_1085_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_1075_p4),64));
    zext_ln113_fu_1066_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_388_p4),64));
    zext_ln114_fu_1061_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_388_p4),64));
    zext_ln115_fu_1056_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_388_p4),64));
    zext_ln116_fu_1051_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_388_p4),64));
    zext_ln169_fu_1007_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_0_i_reg_290),64));
    zext_ln268_fu_1034_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln268_fu_1030_p1),64));
    zext_ln280_fu_1016_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln277_reg_1212),64));
end behav;
